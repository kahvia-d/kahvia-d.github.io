<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Kahvia&#39;s Home</title>
  
  <subtitle>你站在桥上看风景，看风景人在楼上看你。</subtitle>
  <link href="https://blog.kahvia.cn/atom.xml" rel="self"/>
  
  <link href="https://blog.kahvia.cn/"/>
  <updated>2024-01-17T15:21:58.018Z</updated>
  <id>https://blog.kahvia.cn/</id>
  
  <author>
    <name>Kahvia</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>基础算法</title>
    <link href="https://blog.kahvia.cn/2024/01/15/AlgorithmAcBase1.html"/>
    <id>https://blog.kahvia.cn/2024/01/15/AlgorithmAcBase1.html</id>
    <published>2024-01-15T10:16:23.498Z</published>
    <updated>2024-01-17T15:21:58.018Z</updated>
    
    <content type="html"><![CDATA[<h3 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h3><ol><li>选取基准值（分界值）x，可以是数组的第一个元素，也可以是数组的最后一个元素，中间元素亦可。</li><li>使用双指针<strong> i  </strong>和 <strong>j</strong> 从数组的两端开始扫描，从左端找到一个<strong>&gt;&#x3D;x</strong>的值a，从右端找到一个<strong>&lt;&#x3D;x</strong>的值b，交换ab的值，交换后<strong>i以及i之前的元素</strong>都小于等于x，<strong>j以及j之后的元素</strong>都大于等于x。交换后i应递增，j应递减，继续查找可以交换的值，知道ij相遇甚至错开（i &gt; j）。</li><li>当数组成功划分两部分，左部分小于等于x，右部分大于等于x的时候，左右两部分分别递归调用快速排序。</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Created by Kahiva on 2024/1/4.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> t[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">quick_sort</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line">    <span class="type">int</span> i = l - <span class="number">1</span>, j = r + <span class="number">1</span>, x = t[(l + r) / <span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(i &lt; j)&#123;</span><br><span class="line">        <span class="comment">//基准值元素也可以交换，在左区间或者右区间都可以，因此while (t[i] &lt; x);没有等号=。</span></span><br><span class="line">        <span class="comment">//如果是不能交换，即while (t[i] &lt;= x);</span></span><br><span class="line">        <span class="comment">//那么比如6 2 3，基准值为2时。从左边找到了一个比2大的值6，但是从右边找不到比2小的，j--会一直执行，死循环了。</span></span><br><span class="line">        <span class="keyword">do</span> i++; <span class="keyword">while</span> (t[i] &lt; x);</span><br><span class="line">        <span class="keyword">do</span> j--; <span class="keyword">while</span> (t[j] &gt; x);</span><br><span class="line">        <span class="keyword">if</span>(i &lt; j) <span class="built_in">swap</span>(t[i],t[j]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*在划分区间递归调用快排的时候，i==j或者i&gt;j</span></span><br><span class="line"><span class="comment">     ①当i==j时，举例数组为2 1. l==0，r==1。区间为[0,1]。</span></span><br><span class="line"><span class="comment">        x = t[(l + r) / 2];取值为x=2，相当于取数组首元素为基准值，经过循环后i==j==0。</span></span><br><span class="line"><span class="comment">        正确的分法：划分区间应为[0,0]和[1,1]，即[l, j]和[j + 1, r]，或者将j换成i。</span></span><br><span class="line"><span class="comment">        也就是将相遇处的元素划分给右区间。</span></span><br><span class="line"><span class="comment">        错误的分法：如果划分给左区间，即[l, j - 1]和[j, r]的话，区间为[0,-1]和[0,1]。</span></span><br><span class="line"><span class="comment">        右区间的快排与当前快排区间相同，导致右区间递归与当前相同，陷入死循环。</span></span><br><span class="line"><span class="comment">        若想使得该分法正确，应当x = t[(l + r + 1) / 2]，即取数组尾元素为基准值。</span></span><br><span class="line"><span class="comment">     ②当i&gt;j时。举例，在上一轮while中交换ij元素后，进入下一轮while循环前，</span></span><br><span class="line"><span class="comment">        i == 1, j == 2，进入循环后，i++变成2，j--变成1，此时发生i &gt; j的情况。且&lt;2的元素&lt;=x, &gt;1的元素&gt;=x。</span></span><br><span class="line"><span class="comment">        这种情况下划分区间时，根据①的两种分法，为了保证划分的正确性:</span></span><br><span class="line"><span class="comment">        若取数组首元素为基准值，则应采用j,即[l, j]和[j + 1, r]。</span></span><br><span class="line"><span class="comment">        如果采用[l, i]和[i + 1, r]，右区间为[3, r]很显然缺少了下标2对应的&gt;=x的元素，同理左区间会多一个。</span></span><br><span class="line"><span class="comment">        若取数组尾元素为基准值，则应采用i,即[l, i - 1]和[i, r]。原理同上。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     总结：一整个快速排序中包含很多个小快速排序，可能出现i==j和i&gt;j的情况。因此，为了确保两种情况下都正常运行，分类如下。</span></span><br><span class="line"><span class="comment">     ①x = t[(l + r) / 2];或者说取左端点元素为基准值的情况下，递归区间划分[l, j]和[j + 1, r]。</span></span><br><span class="line"><span class="comment">     ②x = t[(l + r + 1) / 2]；或者说取右端点元素为基准值的情况下，递归区间划分[l, i - 1]和[i, r]。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="built_in">quick_sort</span>(l,j);</span><br><span class="line">    <span class="built_in">quick_sort</span>(j + <span class="number">1</span>,r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t[i]);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">quick_sort</span>(<span class="number">0</span>, n - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,t[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h3><ol><li>数组一分为二，递归调用归并排序。</li><li>利用双指针，合并一分为二的数组，将结果存到额外数组 tmp 中。</li><li>合并完成后，将结果数组覆盖至原数组中。</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Created by Kahiva on 2024/1/16.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> t[N], tmp[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">merge_sort</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line">    <span class="comment">//右移等同除以二</span></span><br><span class="line">    <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//从数组中间一分为二，各自归并排序</span></span><br><span class="line">    <span class="built_in">merge_sort</span>(l, mid), <span class="built_in">merge_sort</span>(mid + <span class="number">1</span>, r);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//k是结果数组的下一个放置元素的位置，ij为数组左右两部分的起始指针</span></span><br><span class="line">    <span class="type">int</span> k = <span class="number">0</span>, i = l, j = mid + <span class="number">1</span>;</span><br><span class="line">    <span class="comment">//比较ij指针值的大小，择其小存于结果中</span></span><br><span class="line">    <span class="keyword">while</span>(i &lt;= mid &amp;&amp; j &lt;= r)&#123;</span><br><span class="line">        <span class="keyword">if</span>(t[i] &lt;= t[j]) tmp[k++] = t[i++];</span><br><span class="line">        <span class="keyword">else</span> tmp[k++] = t[j++];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//当某一部分已经全部加入结果后，另一部分的剩余元素直接加入结果</span></span><br><span class="line">    <span class="keyword">while</span>(i &lt;= mid) tmp[k++] = t[i++];</span><br><span class="line">    <span class="keyword">while</span>(j &lt;= r) tmp[k++] = t[j++];</span><br><span class="line"></span><br><span class="line">    <span class="comment">//用有序的结果覆盖原来无序的数组</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = l, j = <span class="number">0</span>; i &lt;= r; i++,j++)</span><br><span class="line">        t[i] = tmp[j];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;t[i]);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">merge_sort</span>(<span class="number">0</span>, n - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, t[i]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="归并排序的应用——求解逆序对数量"><a href="#归并排序的应用——求解逆序对数量" class="headerlink" title="归并排序的应用——求解逆序对数量"></a>归并排序的应用——求解逆序对数量</h4><p>对于任意给定的数字序列，举例如<strong> 4 3 2 1 </strong>，若交换相邻元素，可以减少一个逆序对而不影响这两个元素于其它元素的逆序关系。此处交换<strong> 4 , 3 </strong>会得到<strong> 3 4 2 1 </strong>，可以发现，前半部分元素与后半部分的逆序关系保持不变，前半部分内部消除了一个逆序对。</p><p>因此，我们可以考虑将数组一分为二，左右两部分分别消除内部逆序对，得到两个有序的序列，再消除序列之间的逆序对。若有两个有序序列为<strong> 2 4 6 </strong>和<strong> 1 3 5 </strong>，使用双指针分别指向两个序列开头，将序列2的小元素移到大序列的前面，比如1移到2的前面，越过了2 4 6三个元素，那么就减少了三个逆序对。多次操作，直到大序列整体有序。</p><p>很显然，上述的操作就是归并排序的一种表现。将数组不断地一分为二，当一组只有两个元素的时候，对这一组一分为二成两个序列，每个序列一个元素，使用双指针归并后，表现为逆序的两个元素交换位置。同样长度为2的毗邻序列各自有序，同样可以使用双指针进行逆序对的消除。</p><p>因此，求解逆序对的数量，我们只需要在归并排序中，保存序列2元素越过的序列1元素个数即可。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Created by Kahiva on 2024/1/17.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//逆序对的数量</span></span><br><span class="line"><span class="comment">//https://www.acwing.com/problem/content/790/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">long</span> <span class="type">long</span> t[N], tmp[N];</span><br><span class="line"></span><br><span class="line"><span class="type">long</span> <span class="type">long</span> counts = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">calculate_reverse_pair</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line">    <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">calculate_reverse_pair</span>(l, mid), <span class="built_in">calculate_reverse_pair</span>(mid + <span class="number">1</span>, r);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> k = <span class="number">0</span>, i = l, j = mid + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt;= mid &amp;&amp; j &lt;= r)&#123;</span><br><span class="line">        <span class="keyword">if</span>(t[i] &lt;= t[j]) &#123;</span><br><span class="line">            tmp[k++] = t[i++];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            tmp[k++] = t[j++];</span><br><span class="line">            <span class="comment">//将后半部分的小元素移到前半部分时，越过的前半部分元素个数即为逆序对个数</span></span><br><span class="line">            counts += (mid - i + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(i &lt;= mid) tmp[k++] = t[i++];</span><br><span class="line">    <span class="keyword">while</span>(j &lt;= r) tmp[k++] = t[j++];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = l, j = <span class="number">0</span>; i &lt;= r; i++, j++)</span><br><span class="line">        t[i] = tmp[j];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;t[i]);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">calculate_reverse_pair</span>(<span class="number">0</span>, n - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld&quot;</span>, counts);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二分"><a href="#二分" class="headerlink" title="二分"></a>二分</h3><p>二分就是寻找一个边界，将整个数组一分为二，一边满足性质，另一边不满足。</p><h4 id="整数二分"><a href="#整数二分" class="headerlink" title="整数二分"></a>整数二分</h4><p><a href="https://www.acwing.com/problem/content/791/">AcWing—数的范围</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Created by Kahiva on 2024/1/16.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> t[N];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, q;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;q);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;t[i]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(q--)&#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> l = <span class="number">0</span>, r = n - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(l &lt; r)&#123;</span><br><span class="line">            <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">            <span class="comment">//查找x1位置时，x1以及其后元素都满足&gt;=x这个性质</span></span><br><span class="line">            <span class="comment">//当mid对应元素满足性质时，x1应在mid或者mid前，更新右区间为mid</span></span><br><span class="line">            <span class="keyword">if</span>(t[mid] &gt;= x) r = mid;</span><br><span class="line">            <span class="comment">//当mid对应元素不满足性质时，x1应在mid后，更新左区间为mid + 1.</span></span><br><span class="line">            <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(t[l] != x) <span class="built_in">printf</span>(<span class="string">&quot;-1 -1\n&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, l);</span><br><span class="line">            <span class="type">int</span> l = <span class="number">0</span>, r = n - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span>(l &lt; r)&#123;</span><br><span class="line">                <span class="comment">//在l == mid == r - 1时，若是t[mid]满足性质，左区间会更新为mid</span></span><br><span class="line">                <span class="comment">//为防止死循环，mid应上取整</span></span><br><span class="line">                <span class="type">int</span> mid = l + r + <span class="number">1</span> &gt;&gt; <span class="number">1</span>;</span><br><span class="line">                <span class="comment">//查找x_last元素位置时，x_last及其前面元素满足&lt;=x的性质</span></span><br><span class="line">                <span class="comment">//当mid对应元素满足该性质时，x_last应在mid或者mid后，更新左区间为mid</span></span><br><span class="line">                <span class="comment">//当mid对应元素不满足时，x_last应在mid前，更新右区间为mid - 1</span></span><br><span class="line">                <span class="keyword">if</span>(t[mid] &lt;= x) l = mid;</span><br><span class="line">                <span class="keyword">else</span> r = mid - <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, l);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="浮点数二分"><a href="#浮点数二分" class="headerlink" title="浮点数二分"></a>浮点数二分</h4><p><a href="https://www.acwing.com/problem/content/792/">AcWing—三次方根</a></p><p>在求解次方根的问题中，需要注意，当x处于(0,1)的区间内时，其n次方根的结果会大于x。比如0.01的平方根是0.1。因此在使用二分求解n次方根的时候，我们需要将右边界加1。</p><p>二分结束的条件设置为一定的精度，比如当结果保留6位小数的时候，我们可以设置精度为1e-8，保留7位则1e-9，以此类推。确保结果的准确性。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Created by Kahiva on 2024/1/16.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">double</span> x;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;x);</span><br><span class="line"></span><br><span class="line">    <span class="type">bool</span> aboveZero = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span>(x &lt; <span class="number">0</span>) aboveZero = <span class="literal">false</span>, x = <span class="number">0</span> - x;</span><br><span class="line"></span><br><span class="line">    <span class="type">double</span> l = <span class="number">0</span>, r = x + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(r - l &gt; <span class="number">1e-8</span>)&#123;</span><br><span class="line">        <span class="type">double</span> mid = (l + r) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(mid*mid*mid &gt;= x) r = mid;</span><br><span class="line">        <span class="keyword">else</span> l = mid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lf&quot;</span>, !aboveZero?-l:l);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;快速排序&quot;&gt;&lt;a href=&quot;#快速排序&quot; class=&quot;headerlink&quot; title=&quot;快速排序&quot;&gt;&lt;/a&gt;快速排序&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;选取基准值（分界值）x，可以是数组的第一个元素，也可以是数组的最后一个元素，中间元素亦可。&lt;/li&gt;
&lt;li&gt;使</summary>
      
    
    
    
    <category term="知识" scheme="https://blog.kahvia.cn/categories/%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="Algorithm" scheme="https://blog.kahvia.cn/tags/Algorithm/"/>
    
  </entry>
  
  <entry>
    <title>数据结构——基础问题</title>
    <link href="https://blog.kahvia.cn/2023/11/02/AlgorithmForGraduateTest.html"/>
    <id>https://blog.kahvia.cn/2023/11/02/AlgorithmForGraduateTest.html</id>
    <published>2023-11-02T14:44:06.902Z</published>
    <updated>2023-11-05T14:30:49.237Z</updated>
    
    <content type="html"><![CDATA[<h2 id="六、哈夫曼树"><a href="#六、哈夫曼树" class="headerlink" title="六、哈夫曼树"></a>六、哈夫曼树</h2><h3 id="1-合并果子"><a href="#1-合并果子" class="headerlink" title="1.合并果子"></a>1.合并果子</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Created by Kahiva on 2023/10/31.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//https://www.acwing.com/problem/content/150/</span></span><br><span class="line"><span class="comment">//使用哈夫曼树的知识合并果子堆，计算最小花费体力</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//定义一个优先队列，第一个参数是队列元素的类型，第二个是使用的容器类型，第三个是排序方式。</span></span><br><span class="line">    <span class="comment">//此处使用升序排序，即小的元素优先出队。</span></span><br><span class="line">    priority_queue&lt;<span class="type">int</span>, vector&lt;<span class="type">int</span>&gt;, greater&lt;<span class="type">int</span>&gt;&gt; stones_heap;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">while</span> (n--)&#123;</span><br><span class="line">        <span class="type">int</span> stones;</span><br><span class="line">        cin&gt;&gt;stones;</span><br><span class="line">        stones_heap.<span class="built_in">push</span>(stones);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> strength_used = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (stones_heap.<span class="built_in">size</span>() &gt; <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="comment">//取出最小的两个结点（果子堆）</span></span><br><span class="line">        <span class="type">int</span> min1 = stones_heap.<span class="built_in">top</span>();</span><br><span class="line">        stones_heap.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="type">int</span> min2 = stones_heap.<span class="built_in">top</span>();</span><br><span class="line">        stones_heap.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="comment">//将这两个果子堆合并</span></span><br><span class="line">        stones_heap.<span class="built_in">push</span>(min1 + min2);</span><br><span class="line">        <span class="comment">//累计合并果子堆花费的体力</span></span><br><span class="line">        strength_used += (min1 + min2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout&lt;&lt;strength_used;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-荷马史诗"><a href="#2-荷马史诗" class="headerlink" title="2.荷马史诗"></a>2.荷马史诗</h3><p>​K叉哈夫曼树的问题类似于二叉哈夫曼树。需要注意的点是，在K叉哈夫曼树中，我们每次合并结点都会取出最小的K个结点，在我们进行最后一次合并的时候，可能存在的结点个数不足K个。</p><p>​如1，2，3，4，5，6  ——&gt; 6（1，2，3），4，5，6 ——&gt; 6（1，2，3），15（4，5，6）.</p><p>​这时候我们需要补充零结点进去充数。 6（1，2，3），15（4，5，6），0 ——&gt; 21（6，15）.然后我们会发现，将二层的0和底部的6交换，会让K叉树的结果变好。所以，我们应在开始合并前就补充零结点，使得刚好其元素个数刚好能构建K叉哈夫曼树。</p><p>​这时候我们可以分析什么时候该补充零结点。我们每次合并结点都会将K个结点合并成一个结点，减少了K-1个结点。刚开始N个元素，全部合并后仅剩1个元素，减少了N-1个结点。每次合并减少K-1个，共需减少N-1个，合并次数为（N-1）&#x2F; (K-1)。即不能整除的时候，说明需要补充零结点。</p><p>​由于荷马史诗的编码要求编码树的高度最小，所以在合并结点的时候，除了选择最小的K个结点，还要在节点值相同的时候，优先选择结点展开的子树高度（深度）最小的结点。</p><p>​比如，1，3，4，3 ——&gt; 4（1，3），4，3 。根据值最小原则，可以选第一个4，也可以选第二个4，与3合并。很显然，前者合并到最后的高度为3，后者为2。所以在合并的时候，我们应尽量往矮的结点上合并。就像俄罗斯方块，合并的恰到好处才不容易到达顶端。我想大多数人都是优先平铺方块再垂直放的吧。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Created by Kahiva on 2023/11/1.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//https://www.acwing.com/problem/content/151/</span></span><br><span class="line"><span class="comment">//荷马史诗</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;algorithm&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;queue&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;vector&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//define a pair of data. long long for word_code and int for Huffman coding node depth.</span></span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">long</span> <span class="type">long</span>, <span class="type">int</span>&gt; PLI;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    priority_queue&lt;PLI, vector&lt;PLI&gt;, greater&lt;&gt;&gt; words;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//k is the system of numeration</span></span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> words_num, k;</span><br><span class="line">    cin&gt;&gt;words_num&gt;&gt;k;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (words_num--)&#123;</span><br><span class="line">        <span class="type">long</span> <span class="type">long</span> word;</span><br><span class="line">        cin&gt;&gt;word;</span><br><span class="line">        words.<span class="built_in">push</span>(&#123;word, <span class="number">0</span>&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//every loop for merge will delete k nodes and add a combined node,</span></span><br><span class="line">    <span class="comment">//so k-1 nodes decrease in each merge.</span></span><br><span class="line">    <span class="comment">//the loop will continues until there is only one node.</span></span><br><span class="line">    <span class="comment">//loop time = (words_num - 1) / (k-1).</span></span><br><span class="line">    <span class="comment">//if the time is not a integer, just add zero node until it can be a integer.</span></span><br><span class="line">    <span class="keyword">while</span> ((words.<span class="built_in">size</span>() - <span class="number">1</span>) % (k - <span class="number">1</span>) != <span class="number">0</span>)</span><br><span class="line">        words.<span class="built_in">push</span>(&#123;<span class="number">0</span>,<span class="number">0</span>&#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//the with power length is the new coded book length</span></span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> wpl = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (words.<span class="built_in">size</span>() &gt; <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="type">long</span> <span class="type">long</span>  combined_node_val = <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> max_depth = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; k; ++i) &#123;</span><br><span class="line">            <span class="comment">//get the min node</span></span><br><span class="line">            <span class="keyword">auto</span> min_node = words.<span class="built_in">top</span>();</span><br><span class="line">            <span class="comment">//merge</span></span><br><span class="line">            combined_node_val += min_node.first;</span><br><span class="line">            <span class="comment">//save the highest son-tree&#x27;s depth</span></span><br><span class="line">            max_depth = <span class="built_in">max</span>(max_depth, min_node.second);</span><br><span class="line">            <span class="comment">//delete the node</span></span><br><span class="line">            words.<span class="built_in">pop</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//add the combined node.</span></span><br><span class="line">        words.<span class="built_in">push</span>(&#123;combined_node_val,max_depth + <span class="number">1</span>&#125;);</span><br><span class="line">        <span class="comment">//the new combined node value is a part of the WPL.</span></span><br><span class="line">        wpl += combined_node_val;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout&lt;&lt;wpl&lt;&lt;endl&lt;&lt;words.<span class="built_in">top</span>().second;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="七、拓扑排序（有向图问题）"><a href="#七、拓扑排序（有向图问题）" class="headerlink" title="七、拓扑排序（有向图问题）"></a>七、拓扑排序（有向图问题）</h2><h3 id="1-基于广搜（广度优先遍历）的拓扑排序实现方法"><a href="#1-基于广搜（广度优先遍历）的拓扑排序实现方法" class="headerlink" title="1.基于广搜（广度优先遍历）的拓扑排序实现方法"></a>1.基于广搜（广度优先遍历）的拓扑排序实现方法</h3><p>​广度优先遍历（BFS），实际上就是一层一层地遍历。</p><ol><li>将第一个顶点入队</li><li>队列出队，将出队的顶点连接的顶点进行入队，我简称为出队展开。</li><li>重复步骤2直到队列为空</li></ol><ul><li>注意，需要开一个数组保存顶点是否被遍历过。顶点入队的时候，就该标记为被遍历过了，防止重复入队（比如出现回环的时候，A&lt;—&gt;B，A出队会B会入队，B出队A会入队，会出现死循环）。</li></ul><p>​拓扑排序实现方式</p><pre><code> 1. 入队的标准改为：入度为0的顶点才能入队。 2. 当顶点入队的时候，将该顶点可以通往顶点的入度减1（即在图中隐藏该入队的顶点，代表该工程任务结束） 3. 简单来说，就是在BFS出队展开时，只让入度为0的顶点入队（即只有前置任务全部完成，才能将新的任务加入执行清单）。</code></pre><ul><li>需要开一个数组维护每个顶点的入度。</li><li>因为只有入度为0的才能入队，重边，或者回环，都会导致度不为0无法入队，所以不需要BFS那个判断是否被遍历过的数组。</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Created by Kahiva on 2023/11/5.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//https://www.acwing.com/problem/content/850/</span></span><br><span class="line"><span class="comment">//拓扑排序(采用广度遍历实现)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;algorithm&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;queue&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//n个顶点m条边</span></span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="comment">//定义一个常量N，即最大可能用到的顶点数。定义入度数组和模拟队列的数组时可以用到。</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span> &#123;</span><br><span class="line">    <span class="type">int</span> nodeId;</span><br><span class="line">    Node* next;</span><br><span class="line">    <span class="built_in">Node</span>(<span class="type">int</span> id):<span class="built_in">nodeId</span>(id), <span class="built_in">next</span>(<span class="literal">NULL</span>)&#123;&#125;;</span><br><span class="line">&#125;*link[N];</span><br><span class="line"></span><br><span class="line"><span class="comment">//保存各顶点的入度</span></span><br><span class="line"><span class="type">int</span> inDegree[N];</span><br><span class="line"><span class="comment">//采用数组模拟队列，出队移动头索引，入队移动尾索引。这样可以在模拟队列的同时，保留原队列中的元素。</span></span><br><span class="line"><span class="type">int</span> checkQueue[N];</span><br><span class="line"></span><br><span class="line"><span class="comment">//将某个点和另一个点的边加入邻接表表示的图中。</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">addLink</span><span class="params">(<span class="type">int</span> fromNodeId, <span class="type">int</span> toNodeId)</span></span>&#123;</span><br><span class="line">    Node* node = <span class="keyword">new</span> <span class="built_in">Node</span>(toNodeId);</span><br><span class="line">    node-&gt;next = link[fromNodeId];</span><br><span class="line">    link[fromNodeId] = node;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">topSort</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//head指向队头，rear指向队列最后一个元素</span></span><br><span class="line">    <span class="type">int</span> head = <span class="number">0</span>, rear = <span class="number">-1</span>;</span><br><span class="line">    <span class="comment">//因为顶点编号从1开始，所以入度数组从索引1开始遍历</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="comment">//遍历顶点，如果顶点入度为0，就入队</span></span><br><span class="line">        <span class="keyword">if</span> (!inDegree[i])&#123;</span><br><span class="line">            checkQueue[++rear] = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (head &lt;= rear)&#123;</span><br><span class="line">        <span class="comment">//取出队头元素</span></span><br><span class="line">        <span class="keyword">auto</span> top = checkQueue[head++];</span><br><span class="line">        <span class="comment">//遍历它的邻边，将邻边那头对应点的入度减一</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> p = link[top]; p ; p = p-&gt;next)&#123;</span><br><span class="line">            inDegree[p-&gt;nodeId]--;</span><br><span class="line">            <span class="comment">//如果没有了前置结点，代表可以入队(即被遍历，或者说该工程任务可以执行了)</span></span><br><span class="line">            <span class="keyword">if</span> (inDegree[p-&gt;nodeId] == <span class="number">0</span>)&#123;</span><br><span class="line">                checkQueue[++rear] = p-&gt;nodeId;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//如果队列中的元素个数刚好等于顶点个数，就代表拓扑排序成立，即不存在闭环。</span></span><br><span class="line">    <span class="comment">//因为如果有闭环，闭环上结点的入度始终不为0，无法入队。</span></span><br><span class="line">    <span class="keyword">return</span> n == rear + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (m--)&#123;</span><br><span class="line">        <span class="type">int</span> from, to;</span><br><span class="line">        cin&gt;&gt;from&gt;&gt;to;</span><br><span class="line">        <span class="built_in">addLink</span>(from, to);</span><br><span class="line">        inDegree[to]++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//如果拓扑排序无效，则输出-1</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">topSort</span>())</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;-1&quot;</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">            cout&lt;&lt;checkQueue[i]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;六、哈夫曼树&quot;&gt;&lt;a href=&quot;#六、哈夫曼树&quot; class=&quot;headerlink&quot; title=&quot;六、哈夫曼树&quot;&gt;&lt;/a&gt;六、哈夫曼树&lt;/h2&gt;&lt;h3 id=&quot;1-合并果子&quot;&gt;&lt;a href=&quot;#1-合并果子&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="知识" scheme="https://blog.kahvia.cn/categories/%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="Algorithm" scheme="https://blog.kahvia.cn/tags/Algorithm/"/>
    
  </entry>
  
  <entry>
    <title>Clion中Cmake的设置问题</title>
    <link href="https://blog.kahvia.cn/2023/10/15/Clion-cmake.html"/>
    <id>https://blog.kahvia.cn/2023/10/15/Clion-cmake.html</id>
    <published>2023-10-15T08:58:30.017Z</published>
    <updated>2023-10-15T09:14:10.042Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-设置可执行程序输出目录"><a href="#1-设置可执行程序输出目录" class="headerlink" title="1.设置可执行程序输出目录"></a>1.设置可执行程序输出目录</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span>(CMAKE_RUNTIME_OUTPUT_DIRECTORY <span class="string">&quot;$&#123;CMAKE_CURRENT_SOURCE_DIR&#125;/bin&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="2-将cpp文件添加为“生成可执行文件”的源文件"><a href="#2-将cpp文件添加为“生成可执行文件”的源文件" class="headerlink" title="2.将cpp文件添加为“生成可执行文件”的源文件"></a>2.将cpp文件添加为“生成可执行文件”的源文件</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">add_executable</span>(AcWing3375 Acwing/graduate/AcWing3375.cpp)</span><br></pre></td></tr></table></figure><h3 id="完整的cmake设置"><a href="#完整的cmake设置" class="headerlink" title="完整的cmake设置"></a>完整的cmake设置</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.24</span>)</span><br><span class="line"><span class="comment">#指定cmake工程名</span></span><br><span class="line"><span class="keyword">project</span>(algorithm)</span><br><span class="line"></span><br><span class="line"><span class="comment">#c++版本</span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_STANDARD <span class="number">14</span>)</span><br><span class="line"><span class="comment"># 指定可执行程序输出目录</span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_RUNTIME_OUTPUT_DIRECTORY <span class="string">&quot;$&#123;CMAKE_CURRENT_SOURCE_DIR&#125;/bin&quot;</span>)</span><br><span class="line"><span class="keyword">add_executable</span>(AcWing3375 Acwing/graduate/AcWing3375.cpp)</span><br></pre></td></tr></table></figure><h3 id="附：普通的gitignore文件"><a href="#附：普通的gitignore文件" class="headerlink" title="附：普通的gitignore文件"></a>附：普通的gitignore文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/.idea/</span><br><span class="line">/cmake-build-debug/</span><br><span class="line">/bin/</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;1-设置可执行程序输出目录&quot;&gt;&lt;a href=&quot;#1-设置可执行程序输出目录&quot; class=&quot;headerlink&quot; title=&quot;1.设置可执行程序输出目录&quot;&gt;&lt;/a&gt;1.设置可执行程序输出目录&lt;/h3&gt;&lt;figure class=&quot;highlight cmak</summary>
      
    
    
    
    <category term="知识" scheme="https://blog.kahvia.cn/categories/%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="clion cmake" scheme="https://blog.kahvia.cn/tags/clion-cmake/"/>
    
  </entry>
  
  <entry>
    <title>Vue3使用Echarts</title>
    <link href="https://blog.kahvia.cn/2023/07/19/vue3-echarts.html"/>
    <id>https://blog.kahvia.cn/2023/07/19/vue3-echarts.html</id>
    <published>2023-07-19T01:30:49.148Z</published>
    <updated>2023-07-19T11:13:09.375Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>响应式布局，是为五个不同的屏幕尺寸制定不同的显示比例。这是网页收缩导致网页布局变乱的究极解决方案。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h3&gt;&lt;p&gt;响应式布局，是为五个不同的屏幕尺寸制定不同的显示比例。这是网页收缩导致网页布局变乱的究极解决方案。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="知识" scheme="https://blog.kahvia.cn/categories/%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="echarts vue3" scheme="https://blog.kahvia.cn/tags/echarts-vue3/"/>
    
  </entry>
  
  <entry>
    <title>响应式布局</title>
    <link href="https://blog.kahvia.cn/2023/07/04/ResponsiveDesign.html"/>
    <id>https://blog.kahvia.cn/2023/07/04/ResponsiveDesign.html</id>
    <published>2023-07-04T11:58:41.653Z</published>
    <updated>2023-07-04T13:58:56.460Z</updated>
    
    <content type="html"><![CDATA[<h3 id="响应式布局"><a href="#响应式布局" class="headerlink" title="响应式布局"></a>响应式布局</h3><p>响应式布局，是为五个不同的屏幕尺寸制定不同的显示比例。这是网页收缩导致网页布局变乱的究极解决方案。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;响应式布局&quot;&gt;&lt;a href=&quot;#响应式布局&quot; class=&quot;headerlink&quot; title=&quot;响应式布局&quot;&gt;&lt;/a&gt;响应式布局&lt;/h3&gt;&lt;p&gt;响应式布局，是为五个不同的屏幕尺寸制定不同的显示比例。这是网页收缩导致网页布局变乱的究极解决方案。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="知识" scheme="https://blog.kahvia.cn/categories/%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="html element" scheme="https://blog.kahvia.cn/tags/html-element/"/>
    
  </entry>
  
  <entry>
    <title>Nodejs-包</title>
    <link href="https://blog.kahvia.cn/2023/06/28/NodeJsPackage.html"/>
    <id>https://blog.kahvia.cn/2023/06/28/NodeJsPackage.html</id>
    <published>2023-06-28T06:31:43.686Z</published>
    <updated>2023-06-29T07:59:06.907Z</updated>
    
    <content type="html"><![CDATA[<h3 id="包的类型"><a href="#包的类型" class="headerlink" title="包的类型"></a>包的类型</h3><ul><li>项目包：用于编写项目和和业务逻辑</li><li>软件包：封装工具和方法进行使用<ul><li>本地软件包：当前项目内使用，封装<strong>属性和方法</strong>，存在于 node_modules中。</li><li>全局软件包：本机所有项目使用，封装<strong>命令和工具</strong>，存在于系统设置的位置。</li></ul></li></ul><h3 id="软件包的结构"><a href="#软件包的结构" class="headerlink" title="软件包的结构"></a>软件包的结构</h3><p>如下图所示。整个util包由三部分组成，libs、index.js、package.json。</p><ul><li>libs中，存放工具包的源代码 js 文件。</li><li>index.js文件作为入口文件，通过这个文件统一暴露对外工具方法等。</li><li>package.json文件，描述包的一些信息。</li></ul><p><img src="https://pics.kahvia.cn/img/image-20230628145428487.png" alt="包的结构图"></p><h3 id="libs示例"><a href="#libs示例" class="headerlink" title="libs示例"></a>libs示例</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//printHello.js</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">printHello</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Hello,Adong. It&#x27;s your first tools package.&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> words = <span class="string">&quot;How old are you?&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    printHello,</span><br><span class="line">    words</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="index-js示例"><a href="#index-js示例" class="headerlink" title="index.js示例"></a>index.js示例</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//下面这用法叫做解析重构</span></span><br><span class="line"><span class="keyword">let</span> &#123; printHello, words &#125; = <span class="built_in">require</span>(<span class="string">&quot;./libs/printHello&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> resHeaderUtil = <span class="built_in">require</span>(<span class="string">&quot;./libs/resHeaderUtil-commonjs&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//对libs中的工具，统一作模块暴露</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    printHello,</span><br><span class="line">    words,</span><br><span class="line">    resHeaderUtil</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="package-json示例"><a href="#package-json示例" class="headerlink" title="package.json示例"></a>package.json示例</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;kahvia_tools&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;author&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Kahvia&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;包含了设置http请求的响应头的工具和输出你好的工具函数&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;main&quot;</span><span class="punctuation">:</span> <span class="string">&quot;index.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;license&quot;</span><span class="punctuation">:</span> <span class="string">&quot;MIT&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>其中，main表示工具包的入口文件，version代表版本，license表示许可证。</p><h3 id="软件包的使用"><a href="#软件包的使用" class="headerlink" title="软件包的使用"></a>软件包的使用</h3><p>在使用软件包时，路径只需要到软件包的根目录即可。无需指定更详细的路径。它会自动寻找index.js，若无则查找package.json中的main入口。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> kahvia_utils = <span class="built_in">require</span>(<span class="string">&quot;./util&quot;</span>)</span><br><span class="line"></span><br><span class="line">kahvia_utils.<span class="title function_">printHello</span>()</span><br></pre></td></tr></table></figure><p>结果如下所示。</p><p><img src="https://pics.kahvia.cn/img/image-20230628150604791.png" alt="工具包使用结果"></p><h3 id="NPM"><a href="#NPM" class="headerlink" title="NPM"></a>NPM</h3><p>npm是nodejs的包管理器。</p><p>若项目中没有package.json，可以通过以下命令执行初始化。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init -y</span><br></pre></td></tr></table></figure><p>若我们需要安装某个软件包，则通过以下命令执行安装，软件包会存放在node_modules目录下，软件包的版本则会保存在package-lock.json文件中，用作固化版本。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i package-name</span><br></pre></td></tr></table></figure><p>我们使用下载的软件包时，可以<strong>直接通过包名引入</strong>，而不用通过路径。</p><p>当我们协同开发时，git不会同步我们的node_modules文件夹。可能别人使用了某个包，但是我们自己没有使用，所以本地没有这个包。我们可以通过以下命令，根据package.json文件，安装本地缺少的包。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i</span><br></pre></td></tr></table></figure><h3 id="常用的软件包"><a href="#常用的软件包" class="headerlink" title="常用的软件包"></a>常用的软件包</h3><h4 id="nodemon"><a href="#nodemon" class="headerlink" title="nodemon"></a>nodemon</h4><p>一个全局软件包，需要全局安装。通过这个nodemon启动 js 文件，可以检测代码更改，自动重启程序。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i nodemon -g</span><br></pre></td></tr></table></figure><h4 id="webpack"><a href="#webpack" class="headerlink" title="webpack"></a>webpack</h4><p>一个常用的打包工具，安装在项目的dev环境中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i webpack webpack-cli --save-dev</span><br></pre></td></tr></table></figure><p>在项目的package.json中添加自定义脚本命令。其中，build是自定义的名称，什么都可以，其后面的值即webpack才是真正执行的命令。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;build&quot;</span><span class="punctuation">:</span><span class="string">&quot;webpack&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>将要打包的文件放在根目录的src目录中，通过npm run build，实现项目打包。不过这里的打包只能实现<strong>部分</strong> js 文件的打包，至于为什么是<strong>部分</strong>，因为打包那种nodejs写的后端项目，会报很多错误，而我暂时还不太懂问题出在哪里。目前打包给前端页面引用的js文件是没有问题的。</p><p>通过配置项目根目录的webpack.config.js文件，可以配置打包的参数，比如入口、出口、插件等。其中，entry是入口，output是出口，path是输出路径，filename是打包后的文件名。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> path <span class="keyword">from</span> <span class="string">&#x27;path&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; getRecentDir &#125; <span class="keyword">from</span> <span class="string">&#x27;./utils/recentPath.js&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="attr">entry</span>: <span class="string">&#x27;./src/hello.js&#x27;</span>,</span><br><span class="line">    <span class="attr">output</span>: &#123;</span><br><span class="line">        <span class="attr">path</span>: path.<span class="title function_">resolve</span>(<span class="title function_">getRecentDir</span>(<span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">url</span>), <span class="string">&#x27;dist&#x27;</span>),</span><br><span class="line">        <span class="attr">filename</span>: <span class="string">&#x27;testPack.js&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="HtmlWebpackPlugin（根据自动生成目标页面并连接打包压缩的JS文件）"><a href="#HtmlWebpackPlugin（根据自动生成目标页面并连接打包压缩的JS文件）" class="headerlink" title="HtmlWebpackPlugin（根据自动生成目标页面并连接打包压缩的JS文件）"></a>HtmlWebpackPlugin（根据自动生成目标页面并连接打包压缩的JS文件）</h5><p>webpack通过上述方式打包的话，只能打包普通的静态js文件。也就是说，打包完成后，我们需要手动为页面引入打包后的js文件，这无疑的麻烦的。通过HtmlWebpackPlugin，我们可以将页面一起打包，自动为页面引入打包好的js文件，一起输出到目标目录。</p><blockquote><p>​详细的使用可以参考<a href="https://www.webpackjs.com/plugins/html-webpack-plugin/#basic-usage">官方文档</a></p></blockquote><p>通过如下命令安装插件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev html-webpack-plugin</span><br></pre></td></tr></table></figure><p>在webpack配置文件中，配置如下。其中，template作为模板，即以此模板在目标目录生成一份以filename为文件名的html文件，同时为其引入打包好的js文件。output中的clean属性可以清除上一次打包的东西。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> path <span class="keyword">from</span> <span class="string">&#x27;path&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; getRecentDir &#125; <span class="keyword">from</span> <span class="string">&#x27;./utils/recentPath.js&#x27;</span></span><br><span class="line"><span class="comment">//引入插件</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">HtmlWebpackPlugin</span> <span class="keyword">from</span> <span class="string">&#x27;html-webpack-plugin&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="attr">entry</span>: <span class="string">&#x27;./src/hello.js&#x27;</span>,</span><br><span class="line">    <span class="attr">output</span>: &#123;</span><br><span class="line">        <span class="attr">path</span>: path.<span class="title function_">resolve</span>(<span class="title function_">getRecentDir</span>(<span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">url</span>), <span class="string">&#x27;dist&#x27;</span>),</span><br><span class="line">        <span class="attr">filename</span>: <span class="string">&#x27;testPack.js&#x27;</span>,</span><br><span class="line">        <span class="attr">clean</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">plugins</span>: [</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">HtmlWebpackPlugin</span>(&#123;</span><br><span class="line">            <span class="attr">template</span>: <span class="string">&#x27;./public/index.html&#x27;</span>,</span><br><span class="line">            <span class="attr">filename</span>: <span class="string">&#x27;test.html&#x27;</span></span><br><span class="line">        &#125;)</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="css-loader-style-loader（加载器，把css打包到js文件中）"><a href="#css-loader-style-loader（加载器，把css打包到js文件中）" class="headerlink" title="css-loader,style-loader（加载器，把css打包到js文件中）"></a>css-loader,style-loader（加载器，把css打包到js文件中）</h5><blockquote><p><a href="https://www.webpackjs.com/loaders/css-loader/">这两个加载器的官方文档</a></p></blockquote><ul><li>css-loader：解析css代码。</li><li>style-loader：把解析后的css代码插入到DOM。最后css代码在打包后的js文件中，通过函数的方式保存。</li></ul><p>按照下方命令安装加载器。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev css-loader style-loader</span><br></pre></td></tr></table></figure><p>在webpack配置文件中配置加载器。下方的module部分。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> path <span class="keyword">from</span> <span class="string">&#x27;path&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; getRecentDir &#125; <span class="keyword">from</span> <span class="string">&#x27;./utils/recentPath.js&#x27;</span></span><br><span class="line"><span class="comment">//引入插件</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">HtmlWebpackPlugin</span> <span class="keyword">from</span> <span class="string">&#x27;html-webpack-plugin&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="attr">entry</span>: <span class="string">&#x27;./src/hello.js&#x27;</span>,</span><br><span class="line">    <span class="attr">output</span>: &#123;</span><br><span class="line">        <span class="attr">path</span>: path.<span class="title function_">resolve</span>(<span class="title function_">getRecentDir</span>(<span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">url</span>), <span class="string">&#x27;dist&#x27;</span>),</span><br><span class="line">        <span class="attr">filename</span>: <span class="string">&#x27;testPack.js&#x27;</span>,</span><br><span class="line">        <span class="attr">clean</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">plugins</span>: [</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">HtmlWebpackPlugin</span>(&#123;</span><br><span class="line">            <span class="attr">template</span>: <span class="string">&#x27;./Login/login.html&#x27;</span>,</span><br><span class="line">            <span class="attr">filename</span>: <span class="string">&#x27;login.html&#x27;</span></span><br><span class="line">        &#125;)</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">module</span>: &#123;</span><br><span class="line">        <span class="attr">rules</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">test</span>: <span class="regexp">/\.css$/i</span>,</span><br><span class="line">                <span class="attr">use</span>: [<span class="string">&quot;style-loader&quot;</span>, <span class="string">&quot;css-loader&quot;</span>],</span><br><span class="line">            &#125;,</span><br><span class="line">        ],</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>use数组中的元素顺序是有影响的。loader是从右到左应用的。在这种情况下，首先应用css-loader，然后应用style-loader。即先解析css引用，再绑定DOM元素。</p><p>配置好加载器以后，就可以把使用到的css文件引用到入口js文件中了。比如我这里的打包入口是hello.js文件，那我在文件内容开头import即可。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//hello.js</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;../Login/login.css&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//测试打包</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;hello, kahvia !&quot;</span>)</span><br><span class="line"><span class="comment">//二次输出</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;what&#x27;s up ?&quot;</span>)</span><br></pre></td></tr></table></figure><p>以上都完成后，即可打包。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run build</span><br></pre></td></tr></table></figure><h5 id="mini-css-extract-plugin-提取css文件"><a href="#mini-css-extract-plugin-提取css文件" class="headerlink" title="mini-css-extract-plugin(提取css文件)"></a>mini-css-extract-plugin(提取css文件)</h5><blockquote><p><a href="https://www.webpackjs.com/plugins/mini-css-extract-plugin/">MiniCssExtractPlugin | webpack 中文文档</a></p></blockquote><p>我们在上面通过style-loader，是将css打包进js文件，这会导致js文件比平常更大。所以官方更推荐的一个做法是将css提取出来，而不是打包进js文件。通过<strong>mini-css-extract-plugin</strong>这个插件，配合css-loader我们可以做到提取css文件。</p><p>值得注意的是，mini-css-extract-plugin<strong>不能</strong>和style-loader一起使用，因为既要单独提取，又要打包进js文件，这不是相互矛盾了吗？</p><p>顺带一提，单独提取的css文件，是不会被压缩的。</p><p>通过以下命令安装插件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev mini-css-extract-plugin</span><br></pre></td></tr></table></figure><p>再在webpack配置文件中引入该插件，为其配置plugin选项，并在rules-use中添加插件内置的loader。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> path <span class="keyword">from</span> <span class="string">&#x27;path&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; getRecentDir &#125; <span class="keyword">from</span> <span class="string">&#x27;./utils/recentPath.js&#x27;</span></span><br><span class="line"><span class="comment">//引入插件</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">HtmlWebpackPlugin</span> <span class="keyword">from</span> <span class="string">&#x27;html-webpack-plugin&#x27;</span></span><br><span class="line"><span class="comment">//引入css提取插件</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">MiniCssExtractPlugin</span> <span class="keyword">from</span> <span class="string">&#x27;mini-css-extract-plugin&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="attr">entry</span>: <span class="string">&#x27;./src/hello.js&#x27;</span>,</span><br><span class="line">    <span class="attr">output</span>: &#123;</span><br><span class="line">        <span class="attr">path</span>: path.<span class="title function_">resolve</span>(<span class="title function_">getRecentDir</span>(<span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">url</span>), <span class="string">&#x27;dist&#x27;</span>),</span><br><span class="line">        <span class="attr">filename</span>: <span class="string">&#x27;testPack.js&#x27;</span>,</span><br><span class="line">        <span class="attr">clean</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">plugins</span>: [</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">HtmlWebpackPlugin</span>(&#123;</span><br><span class="line">            <span class="attr">template</span>: <span class="string">&#x27;./Login/login.html&#x27;</span>,</span><br><span class="line">            <span class="attr">filename</span>: <span class="string">&#x27;login.html&#x27;</span></span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">MiniCssExtractPlugin</span>()</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">module</span>: &#123;</span><br><span class="line">        <span class="attr">rules</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">test</span>: <span class="regexp">/\.css$/i</span>,</span><br><span class="line">                <span class="attr">use</span>: [<span class="title class_">MiniCssExtractPlugin</span>.<span class="property">loader</span>, <span class="string">&quot;css-loader&quot;</span>],</span><br><span class="line">            &#125;,</span><br><span class="line">        ],</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="CssMinimizerWebpackPlugin（压缩提取的css文件）"><a href="#CssMinimizerWebpackPlugin（压缩提取的css文件）" class="headerlink" title="CssMinimizerWebpackPlugin（压缩提取的css文件）"></a>CssMinimizerWebpackPlugin（压缩提取的css文件）</h5><p>通过上述的mini-css-extract-plugin插件，只能做到提取，但是会发现提取出来的css文件并没有做到压缩。而CssMinimizerWebpackPlugin就是为了压缩而使用的。</p><p>通过命令安装插件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install css-minimizer-webpack-plugin --save-dev</span><br></pre></td></tr></table></figure><p>在webpack配置文件中引入并配置。其中optimization-minimizer是配置项。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> path <span class="keyword">from</span> <span class="string">&#x27;path&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; getRecentDir &#125; <span class="keyword">from</span> <span class="string">&#x27;./utils/recentPath.js&#x27;</span></span><br><span class="line"><span class="comment">//引入插件</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">HtmlWebpackPlugin</span> <span class="keyword">from</span> <span class="string">&#x27;html-webpack-plugin&#x27;</span></span><br><span class="line"><span class="comment">//引入css提取插件</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">MiniCssExtractPlugin</span> <span class="keyword">from</span> <span class="string">&#x27;mini-css-extract-plugin&#x27;</span></span><br><span class="line"><span class="comment">//引入css压缩插件</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">CssMinimizerPlugin</span> <span class="keyword">from</span> <span class="string">&#x27;css-minimizer-webpack-plugin&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="attr">entry</span>: <span class="string">&#x27;./src/hello.js&#x27;</span>,</span><br><span class="line">    <span class="attr">output</span>: &#123;</span><br><span class="line">        <span class="attr">path</span>: path.<span class="title function_">resolve</span>(<span class="title function_">getRecentDir</span>(<span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">url</span>), <span class="string">&#x27;dist&#x27;</span>),</span><br><span class="line">        <span class="attr">filename</span>: <span class="string">&#x27;testPack.js&#x27;</span>,</span><br><span class="line">        <span class="attr">clean</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">plugins</span>: [</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">HtmlWebpackPlugin</span>(&#123;</span><br><span class="line">            <span class="attr">template</span>: <span class="string">&#x27;./Login/login.html&#x27;</span>,</span><br><span class="line">            <span class="attr">filename</span>: <span class="string">&#x27;login.html&#x27;</span></span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">MiniCssExtractPlugin</span>(),</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">module</span>: &#123;</span><br><span class="line">        <span class="attr">rules</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">test</span>: <span class="regexp">/\.css$/i</span>,</span><br><span class="line">                <span class="attr">use</span>: [<span class="title class_">MiniCssExtractPlugin</span>.<span class="property">loader</span>, <span class="string">&quot;css-loader&quot;</span>],</span><br><span class="line">            &#125;,</span><br><span class="line">        ],</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//优化</span></span><br><span class="line">    <span class="attr">optimization</span>: &#123;</span><br><span class="line">        <span class="comment">//minimize 减小</span></span><br><span class="line">        <span class="attr">minimizer</span>: [</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">CssMinimizerPlugin</span>()</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="打包图片"><a href="#打包图片" class="headerlink" title="打包图片"></a>打包图片</h5><p>在上述操作中，我们可以打包html，css，js了，但是图片该如何处理呢？如果项目中的图片，采用网络地址url访问，那么我们打包后自然可以正常使用。但如果采用的是本地的图片呢？我们就需要把图片也一起打包了。</p><blockquote><p><a href="https://www.webpackjs.com/guides/asset-modules/">资源模块 | webpack 中文文档</a></p></blockquote><p>在webpack5中，我们无需使用外置loader，配置如下所示，在rule中配置图片打包。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> path <span class="keyword">from</span> <span class="string">&#x27;path&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; getRecentDir &#125; <span class="keyword">from</span> <span class="string">&#x27;./utils/recentPath.js&#x27;</span></span><br><span class="line"><span class="comment">//引入插件</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">HtmlWebpackPlugin</span> <span class="keyword">from</span> <span class="string">&#x27;html-webpack-plugin&#x27;</span></span><br><span class="line"><span class="comment">//引入css提取插件</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">MiniCssExtractPlugin</span> <span class="keyword">from</span> <span class="string">&#x27;mini-css-extract-plugin&#x27;</span></span><br><span class="line"><span class="comment">//引入css压缩插件</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">CssMinimizerPlugin</span> <span class="keyword">from</span> <span class="string">&#x27;css-minimizer-webpack-plugin&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="attr">entry</span>: <span class="string">&#x27;./src/hello.js&#x27;</span>,</span><br><span class="line">    <span class="attr">output</span>: &#123;</span><br><span class="line">        <span class="attr">path</span>: path.<span class="title function_">resolve</span>(<span class="title function_">getRecentDir</span>(<span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">url</span>), <span class="string">&#x27;dist&#x27;</span>),</span><br><span class="line">        <span class="attr">filename</span>: <span class="string">&#x27;testPack.js&#x27;</span>,</span><br><span class="line">        <span class="attr">clean</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">plugins</span>: [</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">HtmlWebpackPlugin</span>(&#123;</span><br><span class="line">            <span class="attr">template</span>: <span class="string">&#x27;./Login/login.html&#x27;</span>,</span><br><span class="line">            <span class="attr">filename</span>: <span class="string">&#x27;login.html&#x27;</span></span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">MiniCssExtractPlugin</span>(),</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">module</span>: &#123;</span><br><span class="line">        <span class="attr">rules</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">test</span>: <span class="regexp">/\.css$/i</span>,</span><br><span class="line">                <span class="attr">use</span>: [<span class="title class_">MiniCssExtractPlugin</span>.<span class="property">loader</span>, <span class="string">&quot;css-loader&quot;</span>],</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">//配置图片打包</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">test</span>: <span class="regexp">/\.(png|jpg|gif)$/i</span>,</span><br><span class="line">                <span class="attr">type</span>: <span class="string">&#x27;asset&#x27;</span></span><br><span class="line">            &#125;,</span><br><span class="line">        ],</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//优化</span></span><br><span class="line">    <span class="attr">optimization</span>: &#123;</span><br><span class="line">        <span class="comment">//minimize 减小</span></span><br><span class="line">        <span class="attr">minimizer</span>: [</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">CssMinimizerPlugin</span>()</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在asset类型下，大于8kb的图片会直接作拷贝处理，小于8kb的会转为base64，通过uri的方式替换项目中的src引用。</p><p>类似于css打包，我们将要打包的图片也引入入口JS文件即可。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//hello.js</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;../Login/login.css&#x27;</span></span><br><span class="line"><span class="comment">//导入需要打包的本地图片</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;../Login/ganda.jpg&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//测试打包</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;hello, kahvia !&quot;</span>)</span><br><span class="line"><span class="comment">//二次输出</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;what&#x27;s up ?&quot;</span>)</span><br></pre></td></tr></table></figure><p>正常打包即可。</p><h5 id="搭建热更新开发环境"><a href="#搭建热更新开发环境" class="headerlink" title="搭建热更新开发环境"></a>搭建热更新开发环境</h5><p>下载webpack-dev-server。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i webpack-dev-server --save-dev</span><br></pre></td></tr></table></figure><p>在webpack配置文件中，设置模式（mode）为开发模式（development）,并在package.json中配置自定义命令，即scripts中的选项，”dev”: “webpack serve –open”。</p><p>设置开发模式。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> path <span class="keyword">from</span> <span class="string">&#x27;path&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; getRecentDir &#125; <span class="keyword">from</span> <span class="string">&#x27;./utils/recentPath.js&#x27;</span></span><br><span class="line"><span class="comment">//引入插件</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">HtmlWebpackPlugin</span> <span class="keyword">from</span> <span class="string">&#x27;html-webpack-plugin&#x27;</span></span><br><span class="line"><span class="comment">//引入css提取插件</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">MiniCssExtractPlugin</span> <span class="keyword">from</span> <span class="string">&#x27;mini-css-extract-plugin&#x27;</span></span><br><span class="line"><span class="comment">//引入css压缩插件</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">CssMinimizerPlugin</span> <span class="keyword">from</span> <span class="string">&#x27;css-minimizer-webpack-plugin&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="comment">//设置热更新开发模式</span></span><br><span class="line">    <span class="attr">mode</span>: <span class="string">&quot;development&quot;</span>,</span><br><span class="line">    <span class="comment">//设置入口</span></span><br><span class="line">    <span class="attr">entry</span>: <span class="string">&#x27;./src/hello.js&#x27;</span>,</span><br><span class="line">    <span class="comment">//出口</span></span><br><span class="line">    <span class="attr">output</span>: &#123;</span><br><span class="line">        <span class="attr">path</span>: path.<span class="title function_">resolve</span>(<span class="title function_">getRecentDir</span>(<span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">url</span>), <span class="string">&#x27;dist&#x27;</span>),</span><br><span class="line">        <span class="attr">filename</span>: <span class="string">&#x27;testPack.js&#x27;</span>,</span><br><span class="line">        <span class="attr">clean</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//插件</span></span><br><span class="line">    <span class="attr">plugins</span>: [</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">MiniCssExtractPlugin</span>(&#123;</span><br><span class="line">            <span class="comment">// filename: &quot;login.css&quot;</span></span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">HtmlWebpackPlugin</span>(&#123;</span><br><span class="line">            <span class="attr">template</span>: <span class="string">&#x27;./Login/login.html&#x27;</span>,</span><br><span class="line">            <span class="attr">filename</span>: <span class="string">&#x27;login.html&#x27;</span></span><br><span class="line">        &#125;),</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">module</span>: &#123;</span><br><span class="line">        <span class="attr">rules</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">test</span>: <span class="regexp">/\.css$/i</span>,</span><br><span class="line">                <span class="attr">use</span>: [<span class="title class_">MiniCssExtractPlugin</span>.<span class="property">loader</span>, <span class="string">&quot;css-loader&quot;</span>],</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">//配置图片打包</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">test</span>: <span class="regexp">/\.(png|jpg|gif)$/i</span>,</span><br><span class="line">                <span class="attr">type</span>: <span class="string">&#x27;asset&#x27;</span></span><br><span class="line">            &#125;,</span><br><span class="line">        ],</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//优化</span></span><br><span class="line">    <span class="attr">optimization</span>: &#123;</span><br><span class="line">        <span class="comment">//minimize 减小</span></span><br><span class="line">        <span class="attr">minimizer</span>: [</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">CssMinimizerPlugin</span>()</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在package.json中，如下所示。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;module&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;devDependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;css-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^6.8.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;css-minimizer-webpack-plugin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^5.0.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;html-webpack-plugin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^5.5.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;mini-css-extract-plugin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.7.6&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;style-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.3.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;webpack&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^5.88.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;webpack-cli&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^5.1.4&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;webpack-dev-server&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.15.1&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;webpack&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;dev&quot;</span><span class="punctuation">:</span> <span class="string">&quot;webpack serve --open&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>通过自定义命令启动。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run dev</span><br></pre></td></tr></table></figure><p>这种情况下，会自动创建一个8080端口的服务，服务器的根目录为项目的public目录和webpack配置文件中的出口目录。默认打开的是public目录下的index网页，而我们要查看的网页在出口目录，那么我们可以为public目录的index网页添加重定向，自动跳转到我们要查看的网页。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- public目录下的index.html --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    location.<span class="property">href</span> = <span class="string">&quot;/login.html&quot;</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="生产模式"><a href="#生产模式" class="headerlink" title="生产模式"></a>生产模式</h5><p>上面使用到了开发模式，配合webpack-dev-server可以热更新。与之相对的，还有生产模式（production），即打包模式。</p><p>我们开发模式用的更多，所以mode设置为development，那打包的时候怎么办呢？再去修改mode吗？这很显然不方便。所以我们可以通过自定义命令指定模式。命令的优先级＞配置文件。</p><p>在package.json文件中，我们这样设置，在build和dev后面加上–mode&#x3D;[mode]即可。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;module&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;devDependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;css-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^6.8.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;css-minimizer-webpack-plugin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^5.0.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;html-webpack-plugin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^5.5.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;mini-css-extract-plugin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.7.6&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;style-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.3.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;webpack&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^5.88.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;webpack-cli&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^5.1.4&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;webpack-dev-server&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.15.1&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;webpack --mode=production&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;dev&quot;</span><span class="punctuation">:</span> <span class="string">&quot;webpack serve --open --mode=development&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>这样一来，开发的时候就使用热更新开发模式，打包的时候就使用生产模式，两不误。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;包的类型&quot;&gt;&lt;a href=&quot;#包的类型&quot; class=&quot;headerlink&quot; title=&quot;包的类型&quot;&gt;&lt;/a&gt;包的类型&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;项目包：用于编写项目和和业务逻辑&lt;/li&gt;
&lt;li&gt;软件包：封装工具和方法进行使用&lt;ul&gt;
&lt;li&gt;本地软件包：</summary>
      
    
    
    
    <category term="知识" scheme="https://blog.kahvia.cn/categories/%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="node.js" scheme="https://blog.kahvia.cn/tags/node-js/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript-解构赋值</title>
    <link href="https://blog.kahvia.cn/2023/06/28/Javascript-DestructuringAssignment.html"/>
    <id>https://blog.kahvia.cn/2023/06/28/Javascript-DestructuringAssignment.html</id>
    <published>2023-06-28T06:22:20.924Z</published>
    <updated>2023-06-28T06:31:13.271Z</updated>
    
    <content type="html"><![CDATA[<h3 id="解构赋值"><a href="#解构赋值" class="headerlink" title="解构赋值"></a>解构赋值</h3><p><strong>解构赋值</strong>语法是一种 Javascript 表达式。可以将数组中的值或对象的属性取出，赋值给其他变量。</p><p>对于对象和数组的解构，有两种解构模式：<em>绑定模式</em>和<em>赋值模式</em>，它们的语法略有不同。</p><h3 id="绑定模式"><a href="#绑定模式" class="headerlink" title="绑定模式"></a>绑定模式</h3><p>在绑定模式中，模式以声明关键字（<code>var</code>、<code>let</code> 或 <code>const</code>）开始。然后，每个单独的属性必须绑定到一个变量或进一步解构。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123; <span class="attr">a</span>: <span class="number">1</span>, <span class="attr">b</span>: &#123; <span class="attr">c</span>: <span class="number">2</span> &#125; &#125;;</span><br><span class="line"><span class="keyword">const</span> &#123; a, <span class="attr">b</span>: &#123; <span class="attr">c</span>: d &#125; &#125; = obj;</span><br><span class="line"><span class="comment">// Two variables are bound: `a` and `d`</span></span><br><span class="line"><span class="comment">//两个变量绑定了：a 和 b</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="赋值模式"><a href="#赋值模式" class="headerlink" title="赋值模式"></a>赋值模式</h3><p>在赋值模式中，模式不以关键字开头。每个解构属性都被赋值给一个赋值目标——这个赋值目标可以事先用 <code>var</code> 或 <code>let</code> 声明，也可以是另一个对象的属性——一般来说，可以是任何可以出现在赋值表达式左侧的东西。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> numbers = [];</span><br><span class="line"><span class="keyword">const</span> obj = &#123; <span class="attr">a</span>: <span class="number">1</span>, <span class="attr">b</span>: <span class="number">2</span> &#125;;</span><br><span class="line">(&#123; <span class="attr">a</span>: numbers[<span class="number">0</span>], <span class="attr">b</span>: numbers[<span class="number">1</span>] &#125; = obj);</span><br><span class="line"><span class="comment">// The properties `a` and `b` are assigned to properties of `numbers`</span></span><br><span class="line"><span class="comment">//obj的两个属性，a和b，被赋值给了数组numbers[]</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>备注：</strong> 当使用对象文字解构赋值而不带声明时，在赋值语句周围必须添加括号 <code>( ... )</code>。</p><p><code>&#123; a, b &#125; = &#123; a: 1, b: 2 &#125;</code> 不是有效的独立语法，因为左侧的 <code>&#123;a, b&#125;</code> 被视为块而不是对象字面量。但是，<code>(&#123; a, b &#125; = &#123; a: 1, b: 2 &#125;)</code> 是有效的，<code>const &#123; a, b &#125; = &#123; a: 1， b: 2 &#125;</code> 也是有效的。</p><p>如果你的编码风格不包括尾随分号，则 <code>( ... )</code> 表达式前面需要有一个分号，否则它可能用于执行前一行的函数。</p></blockquote><h3 id="参考来源"><a href="#参考来源" class="headerlink" title="参考来源"></a>参考来源</h3><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment">解构赋值 - JavaScript | MDN</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;解构赋值&quot;&gt;&lt;a href=&quot;#解构赋值&quot; class=&quot;headerlink&quot; title=&quot;解构赋值&quot;&gt;&lt;/a&gt;解构赋值&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;解构赋值&lt;/strong&gt;语法是一种 Javascript 表达式。可以将数组中的值或对象的属性取出，赋值给</summary>
      
    
    
    
    <category term="知识" scheme="https://blog.kahvia.cn/categories/%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="js" scheme="https://blog.kahvia.cn/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>NodeJs使用</title>
    <link href="https://blog.kahvia.cn/2023/06/27/NodeJs.html"/>
    <id>https://blog.kahvia.cn/2023/06/27/NodeJs.html</id>
    <published>2023-06-27T02:06:42.700Z</published>
    <updated>2023-06-28T03:58:03.328Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Commonjs和ECMAScript语法"><a href="#Commonjs和ECMAScript语法" class="headerlink" title="Commonjs和ECMAScript语法"></a>Commonjs和ECMAScript语法</h2><h3 id="Commonjs"><a href="#Commonjs" class="headerlink" title="Commonjs"></a>Commonjs</h3><p>Nodejs中默认采用Commonjs语法。</p><p>模块导出格式如下。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//commonjs语法导出自定义模块</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="attr">setResHeader</span>: setResHeader</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>模块导入格式如下。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入自定义工具模块，只能使用路径</span></span><br><span class="line"><span class="keyword">let</span> resHeaderUtil = <span class="built_in">require</span>(<span class="string">&quot;./utils/resHeaderUtil&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="ECMAScript"><a href="#ECMAScript" class="headerlink" title="ECMAScript"></a>ECMAScript</h3><p>比如vue这种框架，采用的就是ECMAScript语法。要使用这种语法，首先得在package.json中指出type的值。</p><blockquote><p>When set to “module”, the type field allows a package to specify all .js files within are ES modules. If the “type” field is omitted or set to “commonjs”, all .js files are treated as CommonJS.</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;module&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>这便设置成了。</p><h4 id="默认导出"><a href="#默认导出" class="headerlink" title="默认导出"></a>默认导出</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//ECMAScript语法默认导出,外部import以后，全部加载</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="attr">setResHeader</span>: setResHeader</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当我们需要时，如下导入即可。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入自定义工具模块,需要附带文件的后缀</span></span><br><span class="line"><span class="keyword">import</span> resHeaderUtil <span class="keyword">from</span> <span class="string">&#x27;./utils/resHeaderUtil-ecmascript-default.js&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="命名导出"><a href="#命名导出" class="headerlink" title="命名导出"></a>命名导出</h4><p>只需要在变量前面加上 export 修饰，即可在其它地方导入。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//设置http响应体的Content-Type</span></span><br><span class="line"><span class="comment">//ECMAScript语法命名导出,外部import按需导入，按需加载</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">setResHeader</span>(<span class="params">response, contentType</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (contentType == <span class="string">&quot;html&quot;</span>)</span><br><span class="line">        response.<span class="title function_">setHeader</span>(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (contentType == <span class="string">&quot;css&quot;</span>)</span><br><span class="line">        response.<span class="title function_">setHeader</span>(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;text/css;charset=utf-8&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (contentType == <span class="string">&quot;js&quot;</span>)</span><br><span class="line">        response.<span class="title function_">setHeader</span>(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/javascript;charset=utf-8&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        response.<span class="title function_">setHeader</span>(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;text/plain;charset=utf-8&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>命名导出方式，在导入时，是按需导入，按需加载。花括号中放置需要的变量，不用像默认导出那样将整个模块都导入进来。</p><p>需要注意的是，花括号中的变量名，要和引入模块中的变量名或者函数名相同。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入自定义工具模块,需要附带文件的后缀</span></span><br><span class="line"><span class="keyword">import</span> &#123; setResHeader &#125; <span class="keyword">from</span> <span class="string">&#x27;./utils/resHeaderUtil-ecmascript-named.js&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="语法差异"><a href="#语法差异" class="headerlink" title="语法差异"></a>语法差异</h3><p>在Common.js中，我们可以使用__dirname来获取当前js文件所在目录的绝对路径，通过node:path模块的join方法来拼接自己想要的绝对路径。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//添加监听事件</span></span><br><span class="line">server.<span class="title function_">on</span>(<span class="string">&quot;request&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> pathname = req.<span class="property">url</span></span><br><span class="line">    <span class="keyword">var</span> postfix = pathname.<span class="title function_">match</span>(<span class="regexp">/(\.[^.]+|)$/</span>)[<span class="number">0</span>];<span class="comment">//取得后缀名</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//readFile方法使用相对路径时，查找的起点是执行node xx.js命令的目录。这个目录与我们打开终端的位置有关，所以最好采用绝对路径。</span></span><br><span class="line">    <span class="comment">//其中__dirname是当前文件夹的绝对路径，通过path.join方法拼接路径可以将拼接后的路径转换成当前操作系统支持识别的绝对路径</span></span><br><span class="line">    <span class="keyword">let</span> filePath = path.<span class="title function_">join</span>(__dirname, <span class="string">&quot;./Login&quot;</span>, pathname)</span><br><span class="line">    fs.<span class="title function_">readFile</span>(filePath, <span class="function">(<span class="params">err, data</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (err) &#123;</span><br><span class="line">            res.<span class="title function_">setHeader</span>(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;text/html;charset=utf-8&quot;</span>)</span><br><span class="line">            res.<span class="title function_">end</span>(<span class="string">&quot;&lt;h1&gt;访问的内容不存在&lt;/h1&gt;&quot;</span>)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//根据后缀设置响应头</span></span><br><span class="line">            <span class="keyword">if</span> (postfix == <span class="string">&quot;html&quot;</span>)</span><br><span class="line">                resHeaderUtil.<span class="title function_">setResHeader</span>(res, <span class="string">&quot;html&quot;</span>)</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (postfix == <span class="string">&quot;css&quot;</span>)</span><br><span class="line">                resHeaderUtil.<span class="title function_">setResHeader</span>(res, <span class="string">&quot;css&quot;</span>)</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (postfix == <span class="string">&quot;js&quot;</span>)</span><br><span class="line">                resHeaderUtil.<span class="title function_">setResHeader</span>(res, <span class="string">&quot;js&quot;</span>)</span><br><span class="line">            <span class="comment">//以...内容结束响应</span></span><br><span class="line">            res.<span class="title function_">end</span>(data.<span class="title function_">toString</span>())</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>但是当我们使用ES语法后，__dirname就不能使用了，否则会报错如下。</p><blockquote><p>ReferenceError: __dirname is not defined in ES module scope</p></blockquote><p>但是我们使用fs.readFile方法时，又经常需要使用到绝对路径。作为__dirname的替代方案，可以实现工具类如下。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> url <span class="keyword">from</span> <span class="string">&#x27;node:url&#x27;</span></span><br><span class="line"><span class="keyword">import</span> path <span class="keyword">from</span> <span class="string">&#x27;node:path&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">getRecentDir</span>(<span class="params">fileUrl</span>) &#123;</span><br><span class="line">    <span class="comment">//将文件url转换成文件的绝对路径</span></span><br><span class="line">    <span class="keyword">let</span> filePath = url.<span class="title function_">fileURLToPath</span>(fileUrl)</span><br><span class="line">    <span class="comment">//获取绝对路径的最后目录名</span></span><br><span class="line">    <span class="keyword">let</span> dirname = path.<span class="title function_">dirname</span>(filePath)</span><br><span class="line">    <span class="comment">//返回给外界使用</span></span><br><span class="line">    <span class="keyword">return</span> dirname</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>外界传入对应的文件URL即可。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入自定义工具模块,需要附带文件的后缀</span></span><br><span class="line"><span class="keyword">import</span> &#123; setResHeader &#125; <span class="keyword">from</span> <span class="string">&#x27;./utils/resHeaderUtil-ecmascript-named.js&#x27;</span></span><br><span class="line"><span class="comment">//导入自定义的文件绝对路径工具</span></span><br><span class="line"><span class="keyword">import</span> &#123; getRecentDir &#125; <span class="keyword">from</span> <span class="string">&#x27;./utils/recentPath.js&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//添加监听事件</span></span><br><span class="line">server.<span class="title function_">on</span>(<span class="string">&quot;request&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> pathname = req.<span class="property">url</span></span><br><span class="line">    <span class="keyword">var</span> postfix = pathname.<span class="title function_">match</span>(<span class="regexp">/(\.[^.]+|)$/</span>)[<span class="number">0</span>];<span class="comment">//取得后缀名</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//readFile方法使用相对路径时，查找的起点是执行node xx.js命令的目录。这个目录与我们打开终端的位置有关，所以最好采用绝对路径。</span></span><br><span class="line">    <span class="comment">//在ES语法中没有__dirname，要通过文件url转换得到当前文件夹的绝对路径，通过path.join方法拼接路径可以将拼接后的路径转换成当前操作系统支持识别的绝对路径</span></span><br><span class="line">    <span class="keyword">let</span> filePath = path.<span class="title function_">join</span>(<span class="title function_">getRecentDir</span>(<span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">url</span>), <span class="string">&quot;./Login&quot;</span>, pathname)</span><br><span class="line">    fs.<span class="title function_">readFile</span>(filePath, <span class="function">(<span class="params">err, data</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (err) &#123;</span><br><span class="line">            res.<span class="title function_">setHeader</span>(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;text/html;charset=utf-8&quot;</span>)</span><br><span class="line">            res.<span class="title function_">end</span>(<span class="string">&quot;&lt;h1&gt;访问的内容不存在&lt;/h1&gt;&quot;</span>)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//根据后缀设置响应头</span></span><br><span class="line">            <span class="keyword">if</span> (postfix == <span class="string">&quot;html&quot;</span>)</span><br><span class="line">                <span class="comment">// resHeaderUtil.setResHeader(res, &quot;html&quot;)</span></span><br><span class="line">                <span class="title function_">setResHeader</span>(res, <span class="string">&quot;html&quot;</span>)</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (postfix == <span class="string">&quot;css&quot;</span>)</span><br><span class="line">                <span class="comment">// resHeaderUtil.setResHeader(res, &quot;css&quot;)</span></span><br><span class="line">                <span class="title function_">setResHeader</span>(res, <span class="string">&quot;css&quot;</span>)</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (postfix == <span class="string">&quot;js&quot;</span>)</span><br><span class="line">                <span class="comment">// resHeaderUtil.setResHeader(res, &quot;js&quot;)</span></span><br><span class="line">                <span class="title function_">setResHeader</span>(res, <span class="string">&quot;js&quot;</span>)</span><br><span class="line">            <span class="comment">//以...内容结束响应</span></span><br><span class="line">            res.<span class="title function_">end</span>(data.<span class="title function_">toString</span>())</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Commonjs和ECMAScript语法&quot;&gt;&lt;a href=&quot;#Commonjs和ECMAScript语法&quot; class=&quot;headerlink&quot; title=&quot;Commonjs和ECMAScript语法&quot;&gt;&lt;/a&gt;Commonjs和ECMAScript语法&lt;/</summary>
      
    
    
    
    <category term="知识" scheme="https://blog.kahvia.cn/categories/%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="node.js" scheme="https://blog.kahvia.cn/tags/node-js/"/>
    
  </entry>
  
  <entry>
    <title>汇编语言练习</title>
    <link href="https://blog.kahvia.cn/2023/05/04/AssemblyLanguageWorks.html"/>
    <id>https://blog.kahvia.cn/2023/05/04/AssemblyLanguageWorks.html</id>
    <published>2023-05-04T08:05:54.790Z</published>
    <updated>2023-05-04T08:27:47.201Z</updated>
    
    <content type="html"><![CDATA[<h3 id="变量BUF3中存放着10个有符号的字节数据，编程将这10个数按从小到大排序。"><a href="#变量BUF3中存放着10个有符号的字节数据，编程将这10个数按从小到大排序。" class="headerlink" title="变量BUF3中存放着10个有符号的字节数据，编程将这10个数按从小到大排序。"></a>变量BUF3中存放着10个有符号的字节数据，编程将这10个数按从小到大排序。</h3><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>双指针排序。BP留在原地，SI不断移动，一旦发现比BP小的值，就把那个值和BP交换，SI从左往右走一轮可以使得BP所在位置的值最小。一轮走完再开一轮，BP向右移动一位，用以存放次小值，SI再去探险。如此循环。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">;变量BUF3中存放着10个有符号的字节数据，编程将这10个数按从小到大排序。</span><br><span class="line">DSEG SEGMENT</span><br><span class="line">    BUF3       DB 10,9,8,7,6,5,4,3,2,1</span><br><span class="line">    BUFFLENGTH DB $-BUF3</span><br><span class="line">DSEG ENDS</span><br><span class="line"></span><br><span class="line">SSEG SEGMENT</span><br><span class="line">SSEG ENDS</span><br><span class="line"></span><br><span class="line">CSEG SEGMENT</span><br><span class="line">                   ASSUME DS:DSEG,SS:SSEG,CS:CSEG</span><br><span class="line">    START:         </span><br><span class="line">                   MOV    AX,DSEG</span><br><span class="line">                   MOV    DS,AX</span><br><span class="line"></span><br><span class="line">                   MOV    BP,OFFSET BUF3             ;用以指向BUF数组需要放置最小数的位置</span><br><span class="line">                   LEA    SI,BUF3                    ;移动这个指针来寻找最小值</span><br><span class="line"></span><br><span class="line">                   MOV    DH,BUFFLENGTH              ;外循环次数</span><br><span class="line"></span><br><span class="line">    ;MOV    DL,BUFFLENGTH-1            ;不能直接这么写，这样会把BUFFLENGTH处理为地址。地址减一，就成数组的最后一个值的地址了。</span><br><span class="line">                   MOV    DL,BUFFLENGTH</span><br><span class="line">                   DEC    DL                         ;DL是内循环次数</span><br><span class="line"></span><br><span class="line">    OUTERLOOP:     </span><br><span class="line">                   CMP    DH,0                       ;查看是否需要进行外循环</span><br><span class="line">                   JE     ENDLOOP</span><br><span class="line">                   DEC    DH</span><br><span class="line">                   MOV    DL,DH                      ;重置内循环次数</span><br><span class="line"></span><br><span class="line">                   MOV    SI,BP                      ;需要则，将用以移动寻找最小值的指针SI重置到需要放置最小值的指针处</span><br><span class="line">                   JMP    INNERLOOP</span><br><span class="line"></span><br><span class="line">    INNERLOOP:     </span><br><span class="line">                   INC    SI                         ;让SI自增，指向下一个数组元素</span><br><span class="line">                   MOV    AL,DS:[BP]</span><br><span class="line">                   CMP    DS:[SI],AL</span><br><span class="line">                   JLE    UPDATEMIN</span><br><span class="line">                   JMP    BEFORENEXTLOOP</span><br><span class="line">    </span><br><span class="line">    UPDATEMIN:                                       ;把到目前为止的最小值交换到目标最小值位置</span><br><span class="line">                   MOV    AL,DS:[BP]</span><br><span class="line">                   XCHG   AL,DS:[SI]</span><br><span class="line">                   MOV    DS:[BP],AL</span><br><span class="line"></span><br><span class="line">    BEFORENEXTLOOP:                                  ;在内循环进行下一次之前</span><br><span class="line">                   DEC    DL                         ;内循环剩余次数自减</span><br><span class="line">                   CMP    DL,0                       ;判断是否需要还需要进行内循环</span><br><span class="line">                   JG     INNERLOOP                  ;需要则进行</span><br><span class="line"></span><br><span class="line">                   INC    BP                         ;否则自增外循环初始数组地址</span><br><span class="line">                   JMP    OUTERLOOP                  ;进行外循环</span><br><span class="line">    ENDLOOP:       </span><br><span class="line">                   MOV    AH,4CH</span><br><span class="line">                   INT    21H</span><br><span class="line"></span><br><span class="line">CSEG ENDS</span><br><span class="line">END START</span><br></pre></td></tr></table></figure><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li>不能写 “MOV    DL, BUFFLENGTH-1” ，因为会把BUFFLENGTH当成地址来减一然后取新地址的值，会导致DL中存放的是上一个变量即BUF3数组的最后一个数。</li><li>使用BP和SI的时候，需要指定段地址为DS，不然会找不到数据（虽然我也不知道为什么以前不写没事）。</li><li>涉及到双循环还是自己操作循环数比较方便。</li></ul><h4 id="结果图"><a href="#结果图" class="headerlink" title="结果图"></a>结果图</h4><p><img src="https://pics.kahvia.cn/img/%E5%8F%98%E9%87%8FBUF3%E4%B8%AD%E5%AD%98%E6%94%BE%E7%9D%8010%E4%B8%AA%E6%9C%89%E7%AC%A6%E5%8F%B7%E7%9A%84%E5%AD%97%E8%8A%82%E6%95%B0%E6%8D%AE%EF%BC%8C%E7%BC%96%E7%A8%8B%E5%B0%86%E8%BF%9910%E4%B8%AA%E6%95%B0%E6%8C%89%E4%BB%8E%E5%B0%8F%E5%88%B0%E5%A4%A7%E6%8E%92%E5%BA%8F.png" alt="结果图"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;变量BUF3中存放着10个有符号的字节数据，编程将这10个数按从小到大排序。&quot;&gt;&lt;a href=&quot;#变量BUF3中存放着10个有符号的字节数据，编程将这10个数按从小到大排序。&quot; class=&quot;headerlink&quot; title=&quot;变量BUF3中存放着10个有符号</summary>
      
    
    
    
    <category term="微机 汇编" scheme="https://blog.kahvia.cn/categories/%E5%BE%AE%E6%9C%BA-%E6%B1%87%E7%BC%96/"/>
    
    
    <category term="AssemblyLanguage" scheme="https://blog.kahvia.cn/tags/AssemblyLanguage/"/>
    
  </entry>
  
  <entry>
    <title>前端练习1</title>
    <link href="https://blog.kahvia.cn/2023/04/18/HTML-Study.html"/>
    <id>https://blog.kahvia.cn/2023/04/18/HTML-Study.html</id>
    <published>2023-04-18T04:02:22.171Z</published>
    <updated>2023-04-18T04:31:05.874Z</updated>
    
    <content type="html"><![CDATA[<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>HTML:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Button Anime<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;button.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;:javascript&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>Hello<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;button.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>CSS:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100vh</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">13px</span> <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(<span class="built_in">rgb</span>(<span class="number">43</span>, <span class="number">190</span>, <span class="number">96</span>), <span class="built_in">rgb</span>(<span class="number">15</span>, <span class="number">157</span>, <span class="number">88</span>));</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">transition</span>: <span class="number">0.5s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: inherit;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="comment">/* var函数的参数必须以--开头 */</span></span><br><span class="line">    <span class="attribute">left</span>: <span class="built_in">var</span>(--xPos);</span><br><span class="line">    <span class="attribute">top</span>: <span class="built_in">var</span>(--yPos);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>, -<span class="number">50%</span>);</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: black;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">transition</span>: width <span class="number">0.5s</span>, height <span class="number">0.5s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">600px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">600px</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn</span> <span class="selector-tag">a</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>JS:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> button = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.btn&#x27;</span>)</span><br><span class="line"></span><br><span class="line">button.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mouseover&#x27;</span>, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> x = e.<span class="property">clientX</span> - button.<span class="property">offsetLeft</span>;</span><br><span class="line">    <span class="keyword">const</span> y = e.<span class="property">clientY</span> - button.<span class="property">offsetTop</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//element.style.setPorperty是用于设置css的属性</span></span><br><span class="line">    button.<span class="property">style</span>.<span class="title function_">setProperty</span>(<span class="string">&#x27;--xPos&#x27;</span>, x + <span class="string">&#x27;px&#x27;</span>);</span><br><span class="line">    button.<span class="property">style</span>.<span class="title function_">setProperty</span>(<span class="string">&#x27;--yPos&#x27;</span>, y + <span class="string">&#x27;px&#x27;</span>);</span><br><span class="line">    <span class="comment">//element.setAttribute可以用于设置document元素的style属性，但是会覆盖style</span></span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><p><img src="https://pics.kahvia.cn/img/screenshots.gif" alt="效果图"></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ol><li><p>transition和transform是两个不同的CSS属性，它们的作用和用法也不同：</p><ul><li>transition是用来设置元素在不同状态之间切换时的过渡效果的，它可以指定要过渡的属性、过渡的持续时间、过渡的速度曲线和过渡的延迟时间¹。transition可以让元素的属性值平滑地变化，而不是突然跳变。</li><li>transform是用来设置元素的变形效果的，它可以对元素进行旋转、缩放、倾斜、移动等操作，改变元素在二维或三维空间中的形状和位置²。transform可以让元素产生视觉上的变化，而不影响元素在文档流中的位置。</li></ul><p>简单地说，transition是用来控制元素属性值的变化速度和方式的，而transform是用来控制元素形状和位置的变化效果的。两者可以结合使用，实现更多种类的动画效果。例如，你可以用transition来设置transform属性的过渡效果，让元素在旋转或缩放时有一个平滑的动画³。</p><p>源: 与必应的对话， 2023&#x2F;4&#x2F;18<br>(1) CSS transforms VS transitions - Stack Overflow. <a href="https://stackoverflow.com/questions/19186585/css-transforms-vs-transitions">https://stackoverflow.com/questions/19186585/css-transforms-vs-transitions</a>.<br>(2) CSS Transitions - W3School. <a href="https://www.w3schools.com/css/css3_transitions.asp">https://www.w3schools.com/css/css3_transitions.asp</a>.<br>(3) Easy CSS Animation With Transition &amp; Transforms. <a href="https://webdesignerwall.com/tutorials/easy-css-animation-transition-transforms">https://webdesignerwall.com/tutorials/easy-css-animation-transition-transforms</a>.</p></li><li><p>element.setAttribute()和element.style.setProperty()有一些区别，主要是：</p><ul><li>element.setAttribute()是用来设置元素的属性的，它可以设置任何属性，包括自定义属性¹。element.style.setProperty()是用来设置元素的样式属性的，它只能设置CSS属性²。</li><li>element.setAttribute()的第一个参数是属性名，第二个参数是属性值。如果属性已经存在，它会更新属性值，如果不存在，它会添加一个新的属性¹。element.style.setProperty()的第一个参数是CSS属性名，第二个参数是CSS属性值，第三个参数是可选的，表示优先级（如&quot;important&quot;）²。</li><li>element.setAttribute()的属性名不区分大小写，但是在HTML文档中，它会自动转换为小写¹。element.style.setProperty()的CSS属性名区分大小写，但是要使用连字符分隔的形式（如&quot;background-color&quot;），而不是驼峰形式（如&quot;backgroundColor&quot;）²。</li></ul><p>一般来说，如果你想设置元素的样式属性，建议使用element.style.setProperty()，因为它更符合CSS规范，并且可以避免一些浏览器兼容性问题³。如果你想设置元素的其他属性，例如id、class、data-*等，可以使用element.setAttribute()。</p><p>源: 与必应的对话， 2023&#x2F;4&#x2F;18<br>(1) javascript - Setting a property via property or setAttribute - Stack …. <a href="https://stackoverflow.com/questions/8018814/setting-a-property-via-property-or-setattribute">https://stackoverflow.com/questions/8018814/setting-a-property-via-property-or-setattribute</a>.<br>(2) Element: setAttribute() method - Web APIs | MDN - Mozilla Developer. <a href="https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute">https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute</a>.<br>(3) When to use setAttribute vs .attribute&#x3D; in JavaScript?. <a href="https://stackoverflow.com/questions/3919291/when-to-use-setattribute-vs-attribute-in-javascript">https://stackoverflow.com/questions/3919291/when-to-use-setattribute-vs-attribute-in-javascript</a>.</p></li><li><p>var()函数是CSS中的一个函数，它可以插入一个自定义属性（有时也被称为“CSS变量”）的值，用来代替非自定义属性中值的任何部分¹²。例如，你可以在:root上定义一个名为–main-bg-color的自定义属性，然后在其他地方使用var(–main-bg-color)来引用它的值²。var()函数的第一个参数是要替换的自定义属性的名称，第二个参数是可选的，用作回退值，如果第一个参数引用的自定义属性无效，则该函数将使用第二个值¹。</p><p>源: 与必应的对话， 2023&#x2F;4&#x2F;18<br>(1) var() - CSS：层叠样式表 | MDN - Mozilla Developer. <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/var">https://developer.mozilla.org/zh-CN/docs/Web/CSS/var</a>.<br>(2) CSS var() 函数 - w3school. <a href="https://www.w3school.com.cn/cssref/func_var.asp">https://www.w3school.com.cn/cssref/func_var.asp</a>.<br>(3) var() - CSS: Cascading Style Sheets | MDN - Mozilla Developer. <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/var">https://developer.mozilla.org/en-US/docs/Web/CSS/var</a>.</p></li><li><p>var()函数的第一个参数必须是一个以两个破折号开头的有效标识符，表示自定义属性的名称¹。你可以元素上定义这两个自定义属性，然后给它们赋值，例如：</p><p>:root {<br>  –data-x: 50%;<br>  –data-y: 50%;<br>}</p><p>或者</p><p>.btn {<br>  –data-x: 50%;<br>  –data-y: 50%;<br>}</p><p>然后你就可以在::before伪元素中使用var(–data-x)和var(–data-y)来引用它们的值了。</p><p>源: 与必应的对话， 2023&#x2F;4&#x2F;18<br>(1) var() - CSS: Cascading Style Sheets | MDN - Mozilla Developer. <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/var">https://developer.mozilla.org/en-US/docs/Web/CSS/var</a>.<br>(2) var() - CSS：层叠样式表 | MDN - Mozilla Developer. <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/var">https://developer.mozilla.org/zh-CN/docs/Web/CSS/var</a>.</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h3&gt;&lt;p&gt;HTML:&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;</summary>
      
    
    
    
    <category term="前端练习" scheme="https://blog.kahvia.cn/categories/%E5%89%8D%E7%AB%AF%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="Html Css JavaScript" scheme="https://blog.kahvia.cn/tags/Html-Css-JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>Flutter-AzListView</title>
    <link href="https://blog.kahvia.cn/2023/03/14/FlutterAzList_fix.html"/>
    <id>https://blog.kahvia.cn/2023/03/14/FlutterAzList_fix.html</id>
    <published>2023-03-14T06:43:52.459Z</published>
    <updated>2023-03-14T08:29:02.543Z</updated>
    
    <content type="html"><![CDATA[<h3 id="修复数据过少时跳转反弹"><a href="#修复数据过少时跳转反弹" class="headerlink" title="修复数据过少时跳转反弹"></a>修复数据过少时跳转反弹</h3><p>修改源码中滚动代码如下所示。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> _scrollTopIndex(<span class="built_in">String</span> tag) &#123;</span><br><span class="line">  <span class="built_in">int</span> index = _getIndex(tag);</span><br><span class="line">  <span class="built_in">int</span> itemsCountOnScreen = itemPositionsListener.itemPositions.value.length;</span><br><span class="line">  <span class="keyword">if</span> (index != <span class="number">-1</span>) &#123;</span><br><span class="line">    <span class="comment">//如果要跳转的条目后面的数据个数&lt;屏幕可容纳的数据个数,使用align属性去调整跳转</span></span><br><span class="line">    <span class="comment">//条目在屏幕上的位置。align默认是0，即条目的头部top与可视部分上边缘对齐。</span></span><br><span class="line">    <span class="comment">//计算正确的对齐位置，才能让它正常显示。</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//if the the items&#x27;counts after the item you want to jump less than</span></span><br><span class="line">    <span class="comment">//full screen items counts, use the align to justify the item&#x27;s location</span></span><br><span class="line">    <span class="comment">// to be correct. The align defaults to be 0, which means the item&#x27;s top</span></span><br><span class="line">    <span class="comment">// to align the view&#x27;s top.</span></span><br><span class="line">    /ange the data of alignment and make it <span class="keyword">show</span> properly.</span><br><span class="line">    <span class="keyword">if</span> ((widget.data.length - index) &lt; itemsCountOnScreen) &#123;</span><br><span class="line">      <span class="comment">//可视口由两部分组成，一个是其它数据，一个是期望数据（即想要跳转却不足以填充屏幕的数据）。</span></span><br><span class="line">      <span class="comment">//用其他数据个数/总数据个数，作为alignment，就可以让期望数据正确对齐而不发生反弹。</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">//The view port includes other datas and expected datas(this refers to</span></span><br><span class="line">      <span class="comment">//the data you want to jump but can&#x27;t fill the screen and therefor causes</span></span><br><span class="line">      <span class="comment">//out bouncing).</span></span><br><span class="line">      <span class="comment">//other datas&#x27; length / all datas&#x27;length = alignment(the correct rete to align expected datas)</span></span><br><span class="line">      <span class="built_in">double</span> alignment = (itemsCountOnScreen - (widget.data.length - index)) /</span><br><span class="line">          itemsCountOnScreen;</span><br><span class="line">      itemScrollController.jumpTo(alignment: alignment, index: index);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      itemScrollController.jumpTo(index: index);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;修复数据过少时跳转反弹&quot;&gt;&lt;a href=&quot;#修复数据过少时跳转反弹&quot; class=&quot;headerlink&quot; title=&quot;修复数据过少时跳转反弹&quot;&gt;&lt;/a&gt;修复数据过少时跳转反弹&lt;/h3&gt;&lt;p&gt;修改源码中滚动代码如下所示。&lt;/p&gt;
&lt;figure class=&quot;</summary>
      
    
    
    
    <category term="小问题" scheme="https://blog.kahvia.cn/categories/%E5%B0%8F%E9%97%AE%E9%A2%98/"/>
    
    
    <category term="Flutter" scheme="https://blog.kahvia.cn/tags/Flutter/"/>
    
  </entry>
  
  <entry>
    <title>Nacos集群模式</title>
    <link href="https://blog.kahvia.cn/2023/01/05/NacosCluster.html"/>
    <id>https://blog.kahvia.cn/2023/01/05/NacosCluster.html</id>
    <published>2023-01-05T11:57:54.574Z</published>
    <updated>2023-01-05T12:26:32.227Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Nacos集群模式"><a href="#Nacos集群模式" class="headerlink" title="Nacos集群模式"></a>Nacos集群模式</h3><p>想要使用nacos的集群模式，就需要为其配置单独的数据库。</p><ol><li>先在 mysql 数据库中创建数据库NacosDb ，再使用 conf 目录下的 nacos-mysql.sql 文件，创建相关表结构。文件如下所示。</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Copyright 1999-2018 Alibaba Group Holding Ltd.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></span><br><span class="line"><span class="comment"> * you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment"> * You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *      http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment"> * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></span><br><span class="line"><span class="comment"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment"> * See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment"> * limitations under the License.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="comment">/*   数据库全名 = nacos_config   */</span></span><br><span class="line"><span class="comment">/*   表名称 = config_info   */</span></span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `config_info` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;id&#x27;</span>,</span><br><span class="line">  `data_id` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;data_id&#x27;</span>,</span><br><span class="line">  `group_id` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `content` longtext <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;content&#x27;</span>,</span><br><span class="line">  `md5` <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;md5&#x27;</span>,</span><br><span class="line">  `gmt_create` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `gmt_modified` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;修改时间&#x27;</span>,</span><br><span class="line">  `src_user` text COMMENT <span class="string">&#x27;source user&#x27;</span>,</span><br><span class="line">  `src_ip` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;source ip&#x27;</span>,</span><br><span class="line">  `app_name` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `tenant_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;租户字段&#x27;</span>,</span><br><span class="line">  `c_desc` <span class="type">varchar</span>(<span class="number">256</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `c_use` <span class="type">varchar</span>(<span class="number">64</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `effect` <span class="type">varchar</span>(<span class="number">64</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `type` <span class="type">varchar</span>(<span class="number">64</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `c_schema` text,</span><br><span class="line">  `encrypted_data_key` text <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;秘钥&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `uk_configinfo_datagrouptenant` (`data_id`,`group_id`,`tenant_id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_bin COMMENT<span class="operator">=</span><span class="string">&#x27;config_info&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="comment">/*   数据库全名 = nacos_config   */</span></span><br><span class="line"><span class="comment">/*   表名称 = config_info_aggr   */</span></span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `config_info_aggr` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;id&#x27;</span>,</span><br><span class="line">  `data_id` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;data_id&#x27;</span>,</span><br><span class="line">  `group_id` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;group_id&#x27;</span>,</span><br><span class="line">  `datum_id` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;datum_id&#x27;</span>,</span><br><span class="line">  `content` longtext <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;内容&#x27;</span>,</span><br><span class="line">  `gmt_modified` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;修改时间&#x27;</span>,</span><br><span class="line">  `app_name` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `tenant_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;租户字段&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `uk_configinfoaggr_datagrouptenantdatum` (`data_id`,`group_id`,`tenant_id`,`datum_id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_bin COMMENT<span class="operator">=</span><span class="string">&#x27;增加租户字段&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="comment">/*   数据库全名 = nacos_config   */</span></span><br><span class="line"><span class="comment">/*   表名称 = config_info_beta   */</span></span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `config_info_beta` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;id&#x27;</span>,</span><br><span class="line">  `data_id` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;data_id&#x27;</span>,</span><br><span class="line">  `group_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;group_id&#x27;</span>,</span><br><span class="line">  `app_name` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;app_name&#x27;</span>,</span><br><span class="line">  `content` longtext <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;content&#x27;</span>,</span><br><span class="line">  `beta_ips` <span class="type">varchar</span>(<span class="number">1024</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;betaIps&#x27;</span>,</span><br><span class="line">  `md5` <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;md5&#x27;</span>,</span><br><span class="line">  `gmt_create` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `gmt_modified` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;修改时间&#x27;</span>,</span><br><span class="line">  `src_user` text COMMENT <span class="string">&#x27;source user&#x27;</span>,</span><br><span class="line">  `src_ip` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;source ip&#x27;</span>,</span><br><span class="line">  `tenant_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;租户字段&#x27;</span>,</span><br><span class="line">  `encrypted_data_key` text <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;秘钥&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `uk_configinfobeta_datagrouptenant` (`data_id`,`group_id`,`tenant_id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_bin COMMENT<span class="operator">=</span><span class="string">&#x27;config_info_beta&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="comment">/*   数据库全名 = nacos_config   */</span></span><br><span class="line"><span class="comment">/*   表名称 = config_info_tag   */</span></span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `config_info_tag` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;id&#x27;</span>,</span><br><span class="line">  `data_id` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;data_id&#x27;</span>,</span><br><span class="line">  `group_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;group_id&#x27;</span>,</span><br><span class="line">  `tenant_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;tenant_id&#x27;</span>,</span><br><span class="line">  `tag_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;tag_id&#x27;</span>,</span><br><span class="line">  `app_name` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;app_name&#x27;</span>,</span><br><span class="line">  `content` longtext <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;content&#x27;</span>,</span><br><span class="line">  `md5` <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;md5&#x27;</span>,</span><br><span class="line">  `gmt_create` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `gmt_modified` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;修改时间&#x27;</span>,</span><br><span class="line">  `src_user` text COMMENT <span class="string">&#x27;source user&#x27;</span>,</span><br><span class="line">  `src_ip` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;source ip&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `uk_configinfotag_datagrouptenanttag` (`data_id`,`group_id`,`tenant_id`,`tag_id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_bin COMMENT<span class="operator">=</span><span class="string">&#x27;config_info_tag&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="comment">/*   数据库全名 = nacos_config   */</span></span><br><span class="line"><span class="comment">/*   表名称 = config_tags_relation   */</span></span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `config_tags_relation` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;id&#x27;</span>,</span><br><span class="line">  `tag_name` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;tag_name&#x27;</span>,</span><br><span class="line">  `tag_type` <span class="type">varchar</span>(<span class="number">64</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;tag_type&#x27;</span>,</span><br><span class="line">  `data_id` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;data_id&#x27;</span>,</span><br><span class="line">  `group_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;group_id&#x27;</span>,</span><br><span class="line">  `tenant_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;tenant_id&#x27;</span>,</span><br><span class="line">  `nid` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`nid`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `uk_configtagrelation_configidtag` (`id`,`tag_name`,`tag_type`),</span><br><span class="line">  KEY `idx_tenant_id` (`tenant_id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_bin COMMENT<span class="operator">=</span><span class="string">&#x27;config_tag_relation&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="comment">/*   数据库全名 = nacos_config   */</span></span><br><span class="line"><span class="comment">/*   表名称 = group_capacity   */</span></span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `group_capacity` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;主键ID&#x27;</span>,</span><br><span class="line">  `group_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;Group ID，空字符表示整个集群&#x27;</span>,</span><br><span class="line">  `quota` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;配额，0表示使用默认值&#x27;</span>,</span><br><span class="line">  `usage` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;使用量&#x27;</span>,</span><br><span class="line">  `max_size` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;单个配置大小上限，单位为字节，0表示使用默认值&#x27;</span>,</span><br><span class="line">  `max_aggr_count` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;聚合子配置最大个数，，0表示使用默认值&#x27;</span>,</span><br><span class="line">  `max_aggr_size` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值&#x27;</span>,</span><br><span class="line">  `max_history_count` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;最大变更历史数量&#x27;</span>,</span><br><span class="line">  `gmt_create` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `gmt_modified` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;修改时间&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `uk_group_id` (`group_id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_bin COMMENT<span class="operator">=</span><span class="string">&#x27;集群、各Group容量信息表&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="comment">/*   数据库全名 = nacos_config   */</span></span><br><span class="line"><span class="comment">/*   表名称 = his_config_info   */</span></span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `his_config_info` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `nid` <span class="type">bigint</span>(<span class="number">20</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `data_id` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `group_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `app_name` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;app_name&#x27;</span>,</span><br><span class="line">  `content` longtext <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `md5` <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `gmt_create` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span>,</span><br><span class="line">  `gmt_modified` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span>,</span><br><span class="line">  `src_user` text,</span><br><span class="line">  `src_ip` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `op_type` <span class="type">char</span>(<span class="number">10</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `tenant_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;租户字段&#x27;</span>,</span><br><span class="line">  `encrypted_data_key` text <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;秘钥&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`nid`),</span><br><span class="line">  KEY `idx_gmt_create` (`gmt_create`),</span><br><span class="line">  KEY `idx_gmt_modified` (`gmt_modified`),</span><br><span class="line">  KEY `idx_did` (`data_id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_bin COMMENT<span class="operator">=</span><span class="string">&#x27;多租户改造&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="comment">/*   数据库全名 = nacos_config   */</span></span><br><span class="line"><span class="comment">/*   表名称 = tenant_capacity   */</span></span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `tenant_capacity` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;主键ID&#x27;</span>,</span><br><span class="line">  `tenant_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;Tenant ID&#x27;</span>,</span><br><span class="line">  `quota` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;配额，0表示使用默认值&#x27;</span>,</span><br><span class="line">  `usage` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;使用量&#x27;</span>,</span><br><span class="line">  `max_size` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;单个配置大小上限，单位为字节，0表示使用默认值&#x27;</span>,</span><br><span class="line">  `max_aggr_count` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;聚合子配置最大个数&#x27;</span>,</span><br><span class="line">  `max_aggr_size` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值&#x27;</span>,</span><br><span class="line">  `max_history_count` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;最大变更历史数量&#x27;</span>,</span><br><span class="line">  `gmt_create` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `gmt_modified` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;修改时间&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `uk_tenant_id` (`tenant_id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_bin COMMENT<span class="operator">=</span><span class="string">&#x27;租户容量信息表&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `tenant_info` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;id&#x27;</span>,</span><br><span class="line">  `kp` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;kp&#x27;</span>,</span><br><span class="line">  `tenant_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">default</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;tenant_id&#x27;</span>,</span><br><span class="line">  `tenant_name` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">default</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;tenant_name&#x27;</span>,</span><br><span class="line">  `tenant_desc` <span class="type">varchar</span>(<span class="number">256</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;tenant_desc&#x27;</span>,</span><br><span class="line">  `create_source` <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;create_source&#x27;</span>,</span><br><span class="line">  `gmt_create` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `gmt_modified` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;修改时间&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `uk_tenant_info_kptenantid` (`kp`,`tenant_id`),</span><br><span class="line">  KEY `idx_tenant_id` (`tenant_id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_bin COMMENT<span class="operator">=</span><span class="string">&#x27;tenant_info&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `users` (</span><br><span class="line">`username` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">`password` <span class="type">varchar</span>(<span class="number">500</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">`enabled` <span class="type">boolean</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `roles` (</span><br><span class="line">`username` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">`role` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line"><span class="keyword">UNIQUE</span> INDEX `idx_user_role` (`username` <span class="keyword">ASC</span>, `role` <span class="keyword">ASC</span>) <span class="keyword">USING</span> BTREE</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `permissions` (</span><br><span class="line">    `role` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    `resource` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    `action` <span class="type">varchar</span>(<span class="number">8</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    <span class="keyword">UNIQUE</span> INDEX `uk_role_permission` (`role`,`resource`,`action`) <span class="keyword">USING</span> BTREE</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> users (username, password, enabled) <span class="keyword">VALUES</span> (<span class="string">&#x27;nacos&#x27;</span>, <span class="string">&#x27;$2a$10$EuWPZHzz32dJN7jexM34MOeYirDdFAZm2kuWj7VEOJhhZkDrxfvUu&#x27;</span>, <span class="literal">TRUE</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> roles (username, role) <span class="keyword">VALUES</span> (<span class="string">&#x27;nacos&#x27;</span>, <span class="string">&#x27;ROLE_ADMIN&#x27;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="2"><li><p>配置 conf 目录下的 application.properties 配置文件，重要几项如下所示，主要是配置当前节点的一些信息，而且，有几个nacos节点就要复制几个nacos文件夹作相同的配置。</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">### Default web context path:</span></span><br><span class="line"><span class="attr">server.servlet.contextPath</span>=<span class="string">/nacos</span></span><br><span class="line"><span class="comment">### Include message field</span></span><br><span class="line"><span class="attr">server.error.include-message</span>=<span class="string">ON_PARAM</span></span><br><span class="line"><span class="comment">### 当前nacos节点对应端口号</span></span><br><span class="line"><span class="comment">### Default web server port:</span></span><br><span class="line"><span class="attr">server.port</span>=<span class="string">8841</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#*************** Network Related Configurations ***************#</span></span><br><span class="line"><span class="comment">### If prefer hostname over ip for Nacos server addresses in cluster.conf:</span></span><br><span class="line"><span class="comment"># nacos.inetutils.prefer-hostname-over-ip=false</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### Specify local server&#x27;s IP:</span></span><br><span class="line"><span class="comment"># nacos.inetutils.ip-address=</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#*************** Config Module Related Configurations ***************#</span></span><br><span class="line"><span class="comment">### 下面这项需要去掉注释，因为我们要配置数据库</span></span><br><span class="line"><span class="comment">### If use MySQL as datasource:</span></span><br><span class="line"><span class="attr">spring.datasource.platform</span>=<span class="string">mysql</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### 数据库的数量</span></span><br><span class="line"><span class="comment">### Count of DB:</span></span><br><span class="line"><span class="attr">db.num</span>=<span class="string">1</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### Connect URL of DB:</span></span><br><span class="line"><span class="attr">db.url.0</span>=<span class="string">jdbc:mysql://www.kahvia.cn:3306/NacosDb（这是我创建的数据库名称）?characterEncoding=utf8&amp;connectTimeout=1000&amp;socketTimeout=3000&amp;autoReconnect=true&amp;useUnicode=true&amp;useSSL=false&amp;serverTimezone=UTC</span></span><br><span class="line"><span class="attr">db.user.0</span>=<span class="string">数据库账号</span></span><br><span class="line"><span class="attr">db.password.0</span>=<span class="string">密码</span></span><br></pre></td></tr></table></figure></li><li><p>配置 cluster.conf (需要去掉example后缀), 即便是本地配置，也不能使用 localhost 或者127.0.0.1。要使用通过 cmd 和 ipconfig 查看到的ipv4地址，<a href="https://blog.csdn.net/u010696630/article/details/123617028">原因在这里</a>。端口也不能连续，<a href="https://blog.csdn.net/w_e_i_a_i_/article/details/121993518">原因在这里</a>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 列出各 nacos 节点的ip地址和端口号。谁让它们是一起作负载均衡用的呢？</span><br><span class="line">192.168.137.1:8841</span><br><span class="line">192.168.137.1:8843</span><br></pre></td></tr></table></figure></li><li><p>配置nginx，对于上方配置的nacos节点作负载均衡。因为微服务可能有很多很多，注册中心由一个nacos节点来可能不够用。所以上面配置了多个nacos节点，再采用nginx作负载均衡。nginx.conf 文件如下所示。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#user  nobody;</span></span><br><span class="line"><span class="attribute">worker_processes</span>  <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#error_log  logs/error.log;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  notice;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  info;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#pid        logs/nginx.pid;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">events</span> &#123;</span><br><span class="line">    <span class="attribute">worker_connections</span>  <span class="number">1024</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    <span class="attribute">include</span>       mime.types;</span><br><span class="line">    <span class="attribute">default_type</span>  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span></span><br><span class="line">    <span class="comment">#                  &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class="line">    <span class="comment">#                  &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#access_log  logs/access.log  main;</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">sendfile</span>        <span class="literal">on</span>;</span><br><span class="line">    <span class="comment">#tcp_nopush     on;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#keepalive_timeout  0;</span></span><br><span class="line">    <span class="attribute">keepalive_timeout</span>  <span class="number">65</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#gzip  on;</span></span><br><span class="line"></span><br><span class="line"><span class="section">upstream</span> nacos-cluster &#123;</span><br><span class="line"><span class="attribute">server</span> <span class="number">127.0.0.1:8841</span>;</span><br><span class="line"><span class="attribute">server</span> <span class="number">127.0.0.1:8843</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line">        <span class="attribute">server_name</span>  localhost;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#charset koi8-r;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#access_log  logs/host.access.log  main;</span></span><br><span class="line"></span><br><span class="line">        <span class="section">location</span> / &#123;</span><br><span class="line">            <span class="attribute">root</span>   html;</span><br><span class="line">            <span class="attribute">index</span>  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="section">location</span> /nacos &#123;</span><br><span class="line"><span class="attribute">proxy_pass</span> http://nacos-cluster;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#error_page  404              /404.html;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># redirect server error pages to the static page /50x.html</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="attribute">error_page</span>   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /50x.html;</span><br><span class="line">        <span class="section">location</span> = /50x.html &#123;</span><br><span class="line">            <span class="attribute">root</span>   html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># proxy the PHP scripts to Apache listening on 127.0.0.1:80</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">        <span class="comment">#    proxy_pass   http://127.0.0.1;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">        <span class="comment">#    root           html;</span></span><br><span class="line">        <span class="comment">#    fastcgi_pass   127.0.0.1:9000;</span></span><br><span class="line">        <span class="comment">#    fastcgi_index  index.php;</span></span><br><span class="line">        <span class="comment">#    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span></span><br><span class="line">        <span class="comment">#    include        fastcgi_params;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># deny access to .htaccess files, if Apache&#x27;s document root</span></span><br><span class="line">        <span class="comment"># concurs with nginx&#x27;s one</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#location ~ /\.ht &#123;</span></span><br><span class="line">        <span class="comment">#    deny  all;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># another virtual host using mix of IP-, name-, and port-based configuration</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#server &#123;</span></span><br><span class="line">    <span class="comment">#    listen       8000;</span></span><br><span class="line">    <span class="comment">#    listen       somename:8080;</span></span><br><span class="line">    <span class="comment">#    server_name  somename  alias  another.alias;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    location / &#123;</span></span><br><span class="line">    <span class="comment">#        root   html;</span></span><br><span class="line">    <span class="comment">#        index  index.html index.htm;</span></span><br><span class="line">    <span class="comment">#    &#125;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># HTTPS server</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#server &#123;</span></span><br><span class="line">    <span class="comment">#    listen       443 ssl;</span></span><br><span class="line">    <span class="comment">#    server_name  localhost;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    ssl_certificate      cert.pem;</span></span><br><span class="line">    <span class="comment">#    ssl_certificate_key  cert.key;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    ssl_session_cache    shared:SSL:1m;</span></span><br><span class="line">    <span class="comment">#    ssl_session_timeout  5m;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    ssl_ciphers  HIGH:!aNULL:!MD5;</span></span><br><span class="line">    <span class="comment">#    ssl_prefer_server_ciphers  on;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    location / &#123;</span></span><br><span class="line">    <span class="comment">#        root   html;</span></span><br><span class="line">    <span class="comment">#        index  index.html index.htm;</span></span><br><span class="line">    <span class="comment">#    &#125;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>配置完nginx，依次启动各nacos节点，再启动nginx即可。</p></li><li><p>最后启动各项 spring boot 微服务。需要配置 nacos 服务端地址，也就是上面作负载均衡的地址。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://xxx.xxx.xxx:3306/xxx?serverTimezone=GMT%2B8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">xxxxx</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">xxxxx</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">ImageService</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">server-addr:</span> <span class="number">192.168</span><span class="number">.137</span><span class="number">.1</span><span class="string">:80</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">39941</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><p>最后附上一张效果图。</p><p><img src="https://pics.kahvia.cn/img/image-20230105202443232.png" alt="nacos集群模式效果图"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Nacos集群模式&quot;&gt;&lt;a href=&quot;#Nacos集群模式&quot; class=&quot;headerlink&quot; title=&quot;Nacos集群模式&quot;&gt;&lt;/a&gt;Nacos集群模式&lt;/h3&gt;&lt;p&gt;想要使用nacos的集群模式，就需要为其配置单独的数据库。&lt;/p&gt;
&lt;ol&gt;
&lt;li</summary>
      
    
    
    
    <category term="知识" scheme="https://blog.kahvia.cn/categories/%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="MicroService" scheme="https://blog.kahvia.cn/tags/MicroService/"/>
    
  </entry>
  
  <entry>
    <title>Android button 修改背景颜色</title>
    <link href="https://blog.kahvia.cn/2022/12/23/AndroidButtonBackground.html"/>
    <id>https://blog.kahvia.cn/2022/12/23/AndroidButtonBackground.html</id>
    <published>2022-12-22T16:28:28.366Z</published>
    <updated>2022-12-22T16:52:18.703Z</updated>
    
    <content type="html"><![CDATA[<p> 在 themes.xml 中，style的parent如下所示。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;Theme.AndroidUiDesign&quot;</span> <span class="attr">parent</span>=<span class="string">&quot;Theme.MaterialComponents.DayNight.NoActionBar&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这时候，app中按钮的背景颜色会是主题色，自己设置的背景色则会被主题色覆盖。</p><p>修改成下面这样子就可以正常显示自定义背景颜色了。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;Theme.AndroidUiDesign&quot;</span> <span class="attr">parent</span>=<span class="string">&quot;Theme.MaterialComponents.DayNight.NoActionBar.Bridge&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>material design官方文档是这样解释的。</p><blockquote><h4 id="Bridge-Themes"><a href="#Bridge-Themes" class="headerlink" title="Bridge Themes"></a><strong>Bridge Themes</strong></h4><p>If you cannot change your theme to inherit from a Material Components theme, you can inherit from a Material Components <strong>Bridge</strong> theme.</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;Theme.MyApp&quot;</span> <span class="attr">parent</span>=<span class="string">&quot;Theme.MaterialComponents.Light.Bridge&quot;</span>&gt;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="comment">&lt;!-- ... --&gt;</span></span></span><br><span class="line"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Both Theme.MaterialComponents and Theme.MaterialComponents.Light have .Bridge themes:</p><ul><li>Theme.MaterialComponents.Bridge</li><li>Theme.MaterialComponents.Light.Bridge</li><li>Theme.MaterialComponents.NoActionBar.Bridge</li><li>Theme.MaterialComponents.Light.NoActionBar.Bridge</li><li>Theme.MaterialComponents.Light.DarkActionBar.Bridge</li></ul><p>Bridge themes inherit from AppCompat themes, but also define the new Material Components theme attributes for you. If you use a bridge theme, you can start using Material Design components without changing your app theme.</p></blockquote><p>大致意思就是，如果我们既想要保留我们的自定义样式，比如按钮背景啥的，又想要用这种比较新的主题，就可以使用Bridge主题。毕竟是桥嘛，两边都要也很合理。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; 在 themes.xml 中，style的parent如下所示。&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/p</summary>
      
    
    
    
    <category term="知识" scheme="https://blog.kahvia.cn/categories/%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="Android" scheme="https://blog.kahvia.cn/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>AndroidViewPager2</title>
    <link href="https://blog.kahvia.cn/2022/12/22/AndroidViewPager2.html"/>
    <id>https://blog.kahvia.cn/2022/12/22/AndroidViewPager2.html</id>
    <published>2022-12-22T15:53:20.762Z</published>
    <updated>2022-12-22T16:52:18.708Z</updated>
    
    <content type="html"><![CDATA[<h3 id="What’s-this"><a href="#What’s-this" class="headerlink" title="What’s this ?"></a>What’s this ?</h3><p>​ViewPager2，它可以用来制作可以滑动切换的小卡片。相当于Flutter里面的 PageView 。</p><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><p>​在想要使用的地方加入 ViewPager2 节点，创建每一项子节点的布局文件，并实现 ViewPager2 的适配器 adaptor 。大体步骤和ListView 的使用差不多。</p><p>​涉及到以下三个文件。activity_pages.xml, viewpager_item.xml, CardItem.java, ViewPagerAdaptor.java 。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.PagesActivity&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;@color/black&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.viewpager2.widget.ViewPager2</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/viewPager2&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;450dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginHorizontal</span>=<span class="string">&quot;40dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_marginHorizontal</span>=<span class="string">&quot;16dp&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.cardview.widget.CardView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:cardCornerRadius</span>=<span class="string">&quot;16dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:cardElevation</span>=<span class="string">&quot;8dp&quot;</span></span></span><br><span class="line"><span class="tag">        &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">&quot;@+id/itemImg&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;200dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:src</span>=<span class="string">&quot;@drawable/girlandcat&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:scaleType</span>=<span class="string">&quot;centerCrop&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">&quot;@+id/itemTitle&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;50dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:layout_constraintTop_toBottomOf</span>=<span class="string">&quot;@id/itemImg&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:text</span>=<span class="string">&quot;Study&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textSize</span>=<span class="string">&quot;35sp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textStyle</span>=<span class="string">&quot;bold&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:fontFamily</span>=<span class="string">&quot;cursive&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">&quot;@+id/itemContent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:maxHeight</span>=<span class="string">&quot;130dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:overScrollMode</span>=<span class="string">&quot;ifContentScrolls&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:layout_constraintTop_toBottomOf</span>=<span class="string">&quot;@id/itemTitle&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:text</span>=<span class="string">&quot;As you can see,I want to study and make my own progress.&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textSize</span>=<span class="string">&quot;20sp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textStyle</span>=<span class="string">&quot;bold&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:fontFamily</span>=<span class="string">&quot;cursive&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:gravity</span>=<span class="string">&quot;start&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginHorizontal</span>=<span class="string">&quot;20dp&quot;</span></span></span><br><span class="line"><span class="tag">                /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;60dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;60dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginBottom</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:background</span>=<span class="string">&quot;@drawable/card_button_background&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">androidx.cardview.widget.CardView</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.kahvia.androiduidesign.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CardItem</span> &#123;</span><br><span class="line">    <span class="type">int</span> imageId;</span><br><span class="line">    String title,content;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CardItem</span><span class="params">(<span class="type">int</span> imageId, String title, String content)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.imageId = imageId;</span><br><span class="line">        <span class="built_in">this</span>.title = title;</span><br><span class="line">        <span class="built_in">this</span>.content = content;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getImageId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> imageId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setImageId</span><span class="params">(<span class="type">int</span> imageId)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.imageId = imageId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getTitle</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> title;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTitle</span><span class="params">(String title)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.title = title;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getContent</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> content;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setContent</span><span class="params">(String content)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.content = content;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.kahvia.androiduidesign.adaptors;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"><span class="keyword">import</span> android.widget.ImageView;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> androidx.recyclerview.widget.RecyclerView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.kahvia.androiduidesign.R;</span><br><span class="line"><span class="keyword">import</span> cn.kahvia.androiduidesign.pojo.CardItem;</span><br><span class="line"></span><br><span class="line"><span class="comment">//继承时传入泛型为内部类ViewHolder，这个Holder用来保存通过view findViewById方法获得的组件，这样只需要find一次足矣</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ViewPagerAdaptor</span> <span class="keyword">extends</span> <span class="title class_">RecyclerView</span>.Adapter&lt;ViewPagerAdaptor.ViewHolder&gt; &#123;</span><br><span class="line">    <span class="comment">//要展示的列表数据</span></span><br><span class="line">    List&lt;CardItem&gt; cardItems;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造函数，必需。</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ViewPagerAdaptor</span><span class="params">(List&lt;CardItem&gt; cardItems)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.cardItems=cardItems;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//内部类</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">ViewHolder</span> <span class="keyword">extends</span> <span class="title class_">RecyclerView</span>.ViewHolder&#123;</span><br><span class="line">        ImageView image;</span><br><span class="line">        TextView title;</span><br><span class="line">        TextView content;</span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">ViewHolder</span><span class="params">(<span class="meta">@NonNull</span> View itemView)</span> &#123;</span><br><span class="line">            <span class="built_in">super</span>(itemView);</span><br><span class="line">            image=itemView.findViewById(R.id.itemImg);</span><br><span class="line">            title=itemView.findViewById(R.id.itemTitle);</span><br><span class="line">            content=itemView.findViewById(R.id.itemContent);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NonNull</span></span><br><span class="line">    <span class="meta">@Override</span><span class="comment">//创建ViewHolder</span></span><br><span class="line">    <span class="keyword">public</span> ViewPagerAdaptor.ViewHolder <span class="title function_">onCreateViewHolder</span><span class="params">(<span class="meta">@NonNull</span> ViewGroup parent, <span class="type">int</span> viewType)</span> &#123;</span><br><span class="line">        <span class="comment">//创建一个view，在父节点的上下文中填充一个View</span></span><br><span class="line">        View view= LayoutInflater.from(parent.getContext()).inflate(R.layout.viewpager_item,parent,<span class="literal">false</span>);</span><br><span class="line">        <span class="comment">//创建一个ViewHolder。多个ViewHolder可以实现View的复用，无需反复创建View。</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ViewHolder</span>(view);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span><span class="comment">//快速赋值，实现view的迅速加载</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onBindViewHolder</span><span class="params">(<span class="meta">@NonNull</span> ViewPagerAdaptor.ViewHolder holder, <span class="type">int</span> position)</span> &#123;</span><br><span class="line">        CardItem cardItem=cardItems.get(position);</span><br><span class="line">        holder.image.setImageResource(cardItem.getImageId());</span><br><span class="line">        holder.title.setText(cardItem.getTitle());</span><br><span class="line">        holder.content.setText(cardItem.getContent());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getItemCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> cardItems.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ps"><a href="#ps" class="headerlink" title="ps"></a>ps</h3><ul><li>ViewPager2 的子节点要设置为 match_parent .</li></ul><h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><p><img src="https://pics.kahvia.cn/img/image-20221222235846505.png" alt="page1"></p><p><img src="https://pics.kahvia.cn/img/image-20221222235924994.png" alt="page2"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;What’s-this&quot;&gt;&lt;a href=&quot;#What’s-this&quot; class=&quot;headerlink&quot; title=&quot;What’s this ?&quot;&gt;&lt;/a&gt;What’s this ?&lt;/h3&gt;&lt;p&gt;​	ViewPager2，它可以用来制作可以滑动切换的小卡片</summary>
      
    
    
    
    <category term="知识" scheme="https://blog.kahvia.cn/categories/%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="Android" scheme="https://blog.kahvia.cn/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>MixContent</title>
    <link href="https://blog.kahvia.cn/2022/12/15/HttpMixContent.html"/>
    <id>https://blog.kahvia.cn/2022/12/15/HttpMixContent.html</id>
    <published>2022-12-15T05:41:40.429Z</published>
    <updated>2022-12-15T06:15:08.087Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题发生场景"><a href="#问题发生场景" class="headerlink" title="问题发生场景"></a>问题发生场景</h3><p>在本地测试前后端项目的时候一切正常。当我将前端项目和后端项目打包并部署到服务器后，前端项目无法正常访问后端接口。浏览器控制台报错为“已阻止混合内容”，即mix content。</p><p>经过百度得知，mix content 常在 https 页面访问 http 接口时发生。</p><p>由于我的服务器上的tomcat之前就已经配置过SSL证书，所以部署在那个 tomcat 中的项目资源都会以https的方式访问。但是我这个后端项目是spring boot项目，使用的是内置的tomcat，所以直接部署后启动的是 http 服务。我 https 的页面访问了我 http 的接口，就产生了错误。</p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><ol><li>去除服务器上 tomcat 的SSL配置。（不合适）</li><li>为后端spring boot项目配置SSL证书。（目前适用于我）</li></ol><h3 id="方案实施"><a href="#方案实施" class="headerlink" title="方案实施"></a>方案实施</h3><ol><li>下载自己的SSL证书，将 jks 后缀的文件放在项目的 resource 目录下。</li><li>完善项目的配置文件，我这里用的是 yml 配置文件。</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="string">xxxxx</span></span><br><span class="line">  <span class="attr">ssl:</span></span><br><span class="line">    <span class="attr">key-store:</span> <span class="string">classpath:www.kahvia.cn.jks</span></span><br><span class="line">    <span class="attr">key-store-type:</span> <span class="string">JKS</span> <span class="comment">#证书文件类型</span></span><br><span class="line">    <span class="attr">key-store-password:</span> <span class="string">xxxxxxxx</span> <span class="comment">#证书下载时包含的密码</span></span><br></pre></td></tr></table></figure><h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3><ul><li>Mix Content 的错误不会在 http 页面请求 https 接口的时候发生。也就是说，当我为spring boot配置SSL证书后，本地项目仍然可以正常访问已经部署的后端项目。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;问题发生场景&quot;&gt;&lt;a href=&quot;#问题发生场景&quot; class=&quot;headerlink&quot; title=&quot;问题发生场景&quot;&gt;&lt;/a&gt;问题发生场景&lt;/h3&gt;&lt;p&gt;在本地测试前后端项目的时候一切正常。当我将前端项目和后端项目打包并部署到服务器后，前端项目无法正常访问后端接</summary>
      
    
    
    
    <category term="小问题" scheme="https://blog.kahvia.cn/categories/%E5%B0%8F%E9%97%AE%E9%A2%98/"/>
    
    
    <category term="Http" scheme="https://blog.kahvia.cn/tags/Http/"/>
    
  </entry>
  
  <entry>
    <title>Mysql-Uft8mb4</title>
    <link href="https://blog.kahvia.cn/2022/11/29/MysqlUtf8mb4.html"/>
    <id>https://blog.kahvia.cn/2022/11/29/MysqlUtf8mb4.html</id>
    <published>2022-11-29T04:31:58.919Z</published>
    <updated>2022-11-29T05:15:39.648Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>在使用MySQL数据库存储数据的时候，意外发现不能存储Emoji表情😄。经过百度查证得知，mysql默认的 utf8 是三个字节的，存储不了四个字节的生僻字或者Emoji表情。需要换成支持四个字节的 utf8mb4 ，也就是UTF-8 most byte 4 。</p><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 数据库更换字符集</span><br><span class="line">ALTER DATABASE AchatUserService CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci;</span><br><span class="line"># 表更换字符集</span><br><span class="line">ALTER TABLE friendship CONVERT TO CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;</span><br><span class="line"># 需要改变的列进行更换字符集</span><br><span class="line">ALTER TABLE messages CONVERT TO CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;</span><br></pre></td></tr></table></figure><p>仅仅这样是不够的。在建立数据库连接的地方，还需要指定UTF-8字符集。比如在Spring boot项目的配置文件中，指定数据库连接的 url 处。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/AchatUserService?serverTimezone=GMT%2B8&amp;characterEncoding=utf-8</span> <span class="comment"># here</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">xxxx</span></span><br><span class="line">  <span class="attr">servlet:</span></span><br><span class="line">    <span class="attr">multipart:</span></span><br><span class="line">      <span class="attr">max-file-size:</span> <span class="string">100MB</span></span><br><span class="line">      <span class="attr">max-request-size:</span> <span class="string">500MB</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">39939</span></span><br></pre></td></tr></table></figure><p>不指定 utf-8 的话，估计默认是按照 utf8mb3 去连接的吧，这样是修改不了设置了 utf8mb4 字符集的数据的。（这可是重点所在）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h3&gt;&lt;p&gt;在使用MySQL数据库存储数据的时候，意外发现不能存储Emoji表情😄。经过百度查证得知，mysql默认的 utf8 是三个字节的，存储不</summary>
      
    
    
    
    <category term="知识" scheme="https://blog.kahvia.cn/categories/%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="Mysql" scheme="https://blog.kahvia.cn/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>Flutter-VerticalText</title>
    <link href="https://blog.kahvia.cn/2022/11/19/FlutterVerticalText.html"/>
    <id>https://blog.kahvia.cn/2022/11/19/FlutterVerticalText.html</id>
    <published>2022-11-19T06:35:27.432Z</published>
    <updated>2022-11-19T07:27:35.146Z</updated>
    
    <content type="html"><![CDATA[<h3 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h3><p>今天有人问了我一个很有意思的问题：如何实现文字竖直排列，就像古诗词一样。</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>我首先想到的是使用 Container 组件嵌套 Text 组件，固定它的宽度，这样来实现一行一个文字。看起来就像竖直排列一样。但是它的文字垂直间距很显然不方便控制。</p><p>我便去 StackOverflow 上搜索了一番 vertical text。果然有所收获。有人提出，使用 Wrap 组件去实现这个功能。分割需要竖直排列的字符串为单个字，用 Text 组件包裹每个字，然后利用 Wrap 组件的 direction 使得这些 Text 列表垂直排列，排不下则往右边另起一列。</p><p>我自然是希望古诗一列一句的。所以就不用考虑超出换列，手动分割当然最好。既然使用不到 Wrap ，用各种 ListView 来展示上面的 Text 们也是可以的。</p><p>当然了，如果是显示的宋词，那一句太长也是有可能的，为了保险起见，我还是使用了Wrap做了超出处理。</p><p>如此一来，就可以着手实现了。封装一个用 Wrap 为核心的自定义组件，主要用于展示古诗的一句。我们拿到一个古诗后，可以将古诗按标点符号分割，分割后的句子用自定义的 VerticalText 显示就可以了。我更倾向于用 Row 组件去显示，因为我能用它决定主轴方向和交叉轴方向的起点，这能做到古诗句的上对齐，和右对齐。用 ListView 的话，可以很方便地翻转古诗句的顺序，但是不太方便对齐。</p><p>具体的实现可以参考如下代码。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:flutter/material.dart&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyPage</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> MyPage(&#123;<span class="keyword">super</span>.key&#125;);</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="built_in">List</span>&lt;VerticalText&gt; poetry=<span class="keyword">const</span>[</span><br><span class="line">      VerticalText(<span class="string">&quot;将进酒，&quot;</span>),</span><br><span class="line">      VerticalText(<span class="string">&quot;杯莫停。&quot;</span>),</span><br><span class="line">      VerticalText(<span class="string">&quot;与君歌一曲,&quot;</span>),</span><br><span class="line">      VerticalText(<span class="string">&quot;请君为我倾耳听。&quot;</span>)</span><br><span class="line">    ];</span><br><span class="line">    <span class="keyword">return</span> Scaffold(</span><br><span class="line">      appBar: AppBar(</span><br><span class="line">        title: <span class="keyword">const</span> Text(<span class="string">&quot;test&quot;</span>),</span><br><span class="line">      ),</span><br><span class="line">      body: Center(</span><br><span class="line">        child: Row(</span><br><span class="line">          mainAxisAlignment: MainAxisAlignment.end,</span><br><span class="line">          crossAxisAlignment: CrossAxisAlignment.start,</span><br><span class="line">          children: <span class="built_in">List</span>.from(poetry.reversed) ,</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">VerticalText</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String</span> text;</span><br><span class="line">  <span class="keyword">const</span> VerticalText(<span class="keyword">this</span>.text,&#123;Key? key&#125;) : <span class="keyword">super</span>(key: key);</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="comment">//分割字符串为单字，每个字包裹一个Text组件，作为Wrap组件的子组件</span></span><br><span class="line">    <span class="built_in">List</span>&lt;Text&gt; texts=text.split(<span class="string">&quot;&quot;</span>).map((string) =&gt; Text(string, style: <span class="keyword">const</span> TextStyle(fontSize: <span class="number">17</span>))).toList();</span><br><span class="line">    <span class="keyword">return</span> Padding(</span><br><span class="line">      padding: <span class="keyword">const</span> EdgeInsets.symmetric(horizontal: <span class="number">10</span>),</span><br><span class="line">      child: Wrap(</span><br><span class="line">        <span class="comment">//排列方式，vertical代表竖着排，排不够就往旁边排</span></span><br><span class="line">        direction: Axis.vertical,</span><br><span class="line">        <span class="comment">//主轴方向上间距</span></span><br><span class="line">        spacing: <span class="number">20</span>,</span><br><span class="line">        <span class="comment">//交叉轴方向上间距</span></span><br><span class="line">        runSpacing: <span class="number">30</span>,</span><br><span class="line">        alignment: WrapAlignment.center,</span><br><span class="line">        children: texts,</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://pics.kahvia.cn/img/image-20221119145723737.png" alt="效果图"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;需求&quot;&gt;&lt;a href=&quot;#需求&quot; class=&quot;headerlink&quot; title=&quot;需求&quot;&gt;&lt;/a&gt;需求&lt;/h3&gt;&lt;p&gt;今天有人问了我一个很有意思的问题：如何实现文字竖直排列，就像古诗词一样。&lt;/p&gt;
&lt;h3 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; cla</summary>
      
    
    
    
    <category term="知识" scheme="https://blog.kahvia.cn/categories/%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="Flutter" scheme="https://blog.kahvia.cn/tags/Flutter/"/>
    
  </entry>
  
  <entry>
    <title>OS-Lab2</title>
    <link href="https://blog.kahvia.cn/2022/11/13/OS-lab2.html"/>
    <id>https://blog.kahvia.cn/2022/11/13/OS-lab2.html</id>
    <published>2022-11-13T11:57:16.204Z</published>
    <updated>2023-01-05T12:45:15.955Z</updated>
    
    <content type="html"><![CDATA[<h2 id="练习0"><a href="#练习0" class="headerlink" title="练习0"></a>练习0</h2><blockquote><p>练习0：填写已有实验<br>本实验依赖实验1。请把你做的实验1的代码填入本实验中代码中有“LAB1”的注释相应部分。</p></blockquote><p>使用 Meld Diff Viewer 将 lab1 的代码填入了 lab2 的相应位置。</p><h2 id="练习1"><a href="#练习1" class="headerlink" title="练习1"></a>练习1</h2><blockquote><p>练习1：实现 first-fit 连续物理内存分配算法（需要编程）<br>在实现first fit 内存分配算法的回收函数时，要考虑地址连续的空闲块之间的合并操作。提示:在建立空闲页块链表时，需要按照空闲页块起始地址来排序，形成一个有序的链表。可能会修改default_pmm.c中的default_init，default_init_memmap，default_alloc_pages，default_free_pages等相关函数。请仔细查看和理解default_pmm.c中的注释。<br>请在实验报告中简要说明你的设计实现过程。请回答如下问题：<br>你的first fit算法是否有进一步的改进空间</p></blockquote><ol><li>进入ucore操作系统之后，第一个执行的函数是 default_init_memmap，对内核进行初始化。在其中，调用了初始化物理内存的函数 pmm_init 。</li><li>这个函数主要是完成对于整个物理内存的初始化，页初始化只是其中的一部分，调用位置偏前，函数之后的部分可以不管，直接进入page_init函数。</li><li>函数 page_init 完成了一个整体物理地址的初始化过程。</li><li>页初始化部分，由函数 init_memmap 处理。</li></ol><p>在 kern&#x2F;mm&#x2F;default_pmm.c 文件中，修改各个函数。</p><h3 id="1"><a href="#1" class="headerlink" title="1"></a>1</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">static</span> <span class="type">void</span></span><br><span class="line"><span class="title function_">default_init_memmap</span><span class="params">(<span class="keyword">struct</span> Page *base, <span class="type">size_t</span> n)</span> &#123;</span><br><span class="line">    assert(n &gt; <span class="number">0</span>);</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Page</span> *<span class="title">p</span> =</span> base;</span><br><span class="line">    <span class="keyword">for</span> (; p != base + n; p ++) &#123;</span><br><span class="line">        assert(PageReserved(p));</span><br><span class="line">        p-&gt;flags = <span class="number">0</span>;</span><br><span class="line">        SetPageProperty(p);</span><br><span class="line">        p-&gt;property = <span class="number">0</span>;</span><br><span class="line">        set_page_ref(p, <span class="number">0</span>);</span><br><span class="line">        list_add_before(&amp;free_list, &amp;(p-&gt;page_link));</span><br><span class="line">    &#125;</span><br><span class="line">    nr_free += n;</span><br><span class="line">    <span class="comment">//first block</span></span><br><span class="line">    base-&gt;property = n;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2"><a href="#2" class="headerlink" title="2"></a>2</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">static</span> <span class="keyword">struct</span> Page *</span><br><span class="line"><span class="title function_">default_alloc_pages</span><span class="params">(<span class="type">size_t</span> n)</span> &#123;</span><br><span class="line">    assert(n &gt; <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span> (n &gt; nr_free) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">list_entry_t</span> *le, *len;</span><br><span class="line">    le = &amp;free_list;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>((le=list_next(le)) != &amp;free_list) &#123;</span><br><span class="line">      <span class="class"><span class="keyword">struct</span> <span class="title">Page</span> *<span class="title">p</span> =</span> le2page(le, page_link);</span><br><span class="line">      <span class="keyword">if</span>(p-&gt;property &gt;= n)&#123;</span><br><span class="line">        <span class="type">int</span> i;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">          len = list_next(le);</span><br><span class="line">          <span class="class"><span class="keyword">struct</span> <span class="title">Page</span> *<span class="title">pp</span> =</span> le2page(le, page_link);</span><br><span class="line">          SetPageReserved(pp);</span><br><span class="line">          ClearPageProperty(pp);</span><br><span class="line">          list_del(le);</span><br><span class="line">          le = len;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(p-&gt;property&gt;n)&#123;</span><br><span class="line">          (le2page(le,page_link))-&gt;property = p-&gt;property - n;</span><br><span class="line">        &#125;</span><br><span class="line">        ClearPageProperty(p);</span><br><span class="line">        SetPageReserved(p);</span><br><span class="line">        nr_free -= n;</span><br><span class="line">        <span class="keyword">return</span> p;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3"><a href="#3" class="headerlink" title="3"></a>3</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">static</span> <span class="type">void</span></span><br><span class="line"><span class="title function_">default_free_pages</span><span class="params">(<span class="keyword">struct</span> Page *base, <span class="type">size_t</span> n)</span> &#123;</span><br><span class="line">    assert(n &gt; <span class="number">0</span>);</span><br><span class="line">    assert(PageReserved(base));</span><br><span class="line"></span><br><span class="line">    <span class="type">list_entry_t</span> *le = &amp;free_list;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Page</span> * <span class="title">p</span>;</span></span><br><span class="line">    <span class="keyword">while</span>((le=list_next(le)) != &amp;free_list) &#123;</span><br><span class="line">      p = le2page(le, page_link);</span><br><span class="line">      <span class="keyword">if</span>(p&gt;base)&#123;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//list_add_before(le, base-&gt;page_link);</span></span><br><span class="line">    <span class="keyword">for</span>(p=base;p&lt;base+n;p++)&#123;</span><br><span class="line">      list_add_before(le, &amp;(p-&gt;page_link));</span><br><span class="line">    &#125;</span><br><span class="line">    base-&gt;flags = <span class="number">0</span>;</span><br><span class="line">    set_page_ref(base, <span class="number">0</span>);</span><br><span class="line">    ClearPageProperty(base);</span><br><span class="line">    SetPageProperty(base);</span><br><span class="line">    base-&gt;property = n;</span><br><span class="line">    </span><br><span class="line">    p = le2page(le,page_link) ;</span><br><span class="line">    <span class="keyword">if</span>( base+n == p )&#123;</span><br><span class="line">      base-&gt;property += p-&gt;property;</span><br><span class="line">      p-&gt;property = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    le = list_prev(&amp;(base-&gt;page_link));</span><br><span class="line">    p = le2page(le, page_link);</span><br><span class="line">    <span class="keyword">if</span>(le!=&amp;free_list &amp;&amp; p==base<span class="number">-1</span>)&#123;</span><br><span class="line">      <span class="keyword">while</span>(le!=&amp;free_list)&#123;</span><br><span class="line">        <span class="keyword">if</span>(p-&gt;property)&#123;</span><br><span class="line">          p-&gt;property += base-&gt;property;</span><br><span class="line">          base-&gt;property = <span class="number">0</span>;</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        le = list_prev(le);</span><br><span class="line">        p = le2page(le,page_link);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    nr_free += n;</span><br><span class="line">    <span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="练习2"><a href="#练习2" class="headerlink" title="练习2"></a>练习2</h2><blockquote><p>练习2：实现寻找虚拟地址对应的页表项（需要编程）<br>通过设置页表和对应的页表项，可建立虚拟内存地址和物理内存地址的对应关系。其中的get_pte函数是设置页表项环节中的一个重要步骤。此函数找到一个虚地址对应的二级页表项的内核虚地址，如果此二级页表项不存在，则分配一个包含此项的二级页表。本练习需要补全get_pte函数 in kern&#x2F;mm&#x2F;pmm.c，实现其功能。</p></blockquote><p>打开 pmm.c 文件，根据注释实现代码如下。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//get_pte - get pte and return the kernel virtual address of this pte for la</span></span><br><span class="line"><span class="comment">//        - if the PT contians this pte didn&#x27;t exist, alloc a page for PT</span></span><br><span class="line"><span class="comment">// parameter:</span></span><br><span class="line"><span class="comment">//  pgdir:  the kernel virtual base address of PDT</span></span><br><span class="line"><span class="comment">//  la:     the linear address need to map</span></span><br><span class="line"><span class="comment">//  create: a logical value to decide if alloc a page for PT</span></span><br><span class="line"><span class="comment">// return vaule: the kernel virtual address of this pte</span></span><br><span class="line"><span class="type">pte_t</span> *</span><br><span class="line"><span class="title function_">get_pte</span><span class="params">(<span class="type">pde_t</span> *pgdir, <span class="type">uintptr_t</span> la, <span class="type">bool</span> create)</span> &#123;</span><br><span class="line">    <span class="comment">/* LAB2 EXERCISE 2: YOUR CODE</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * If you need to visit a physical address, please use KADDR()</span></span><br><span class="line"><span class="comment">     * please read pmm.h for useful macros</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * Maybe you want help comment, BELOW comments can help you finish the code</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * Some Useful MACROs and DEFINEs, you can use them in below implementation.</span></span><br><span class="line"><span class="comment">     * MACROs or Functions:</span></span><br><span class="line"><span class="comment">     *   PDX(la) = the index of page directory entry of VIRTUAL ADDRESS la.</span></span><br><span class="line"><span class="comment">     *   KADDR(pa) : takes a physical address and returns the corresponding kernel virtual address.</span></span><br><span class="line"><span class="comment">     *   set_page_ref(page,1) : means the page be referenced by one time</span></span><br><span class="line"><span class="comment">     *   page2pa(page): get the physical address of memory which this (struct Page *) page  manages</span></span><br><span class="line"><span class="comment">     *   struct Page * alloc_page() : allocation a page</span></span><br><span class="line"><span class="comment">     *   memset(void *s, char c, size_t n) : sets the first n bytes of the memory area pointed by s</span></span><br><span class="line"><span class="comment">     *                                       to the specified value c.</span></span><br><span class="line"><span class="comment">     * DEFINEs:</span></span><br><span class="line"><span class="comment">     *   PTE_P           0x001                   // page table/directory entry flags bit : Present</span></span><br><span class="line"><span class="comment">     *   PTE_W           0x002                   // page table/directory entry flags bit : Writeable</span></span><br><span class="line"><span class="comment">     *   PTE_U           0x004                   // page table/directory entry flags bit : User can access</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> 0</span></span><br><span class="line">    <span class="type">pde_t</span> *pdep = <span class="literal">NULL</span>;   <span class="comment">// (1) find page directory entry</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="number">0</span>) &#123;              <span class="comment">// (2) check if entry is not present</span></span><br><span class="line">                          <span class="comment">// (3) check if creating is needed, then alloc page for page table</span></span><br><span class="line">                          <span class="comment">// CAUTION: this page is used for page table, not for common data page</span></span><br><span class="line">                          <span class="comment">// (4) set page reference</span></span><br><span class="line">        <span class="type">uintptr_t</span> pa = <span class="number">0</span>; <span class="comment">// (5) get linear address of page</span></span><br><span class="line">                          <span class="comment">// (6) clear page content using memset</span></span><br><span class="line">                          <span class="comment">// (7) set page directory entry&#x27;s permission</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;          <span class="comment">// (8) return page table entry</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">    <span class="comment">//尝试获得页表</span></span><br><span class="line">    <span class="type">pde_t</span> *pdep = &amp;pgdir[PDX(la)]; </span><br><span class="line">    <span class="comment">//若是获取不成功</span></span><br><span class="line">    <span class="keyword">if</span> (!(*pdep &amp; PTE_P)) &#123;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">Page</span> *<span class="title">page</span>;</span></span><br><span class="line">        <span class="comment">//若是不需要创建或者创建失败</span></span><br><span class="line">        <span class="keyword">if</span> (!create || (page = alloc_page()) == <span class="literal">NULL</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//增加引用次数</span></span><br><span class="line">        set_page_ref(page, <span class="number">1</span>);</span><br><span class="line">        <span class="comment">//得到该页物理地址</span></span><br><span class="line">        <span class="type">uintptr_t</span> pa = page2pa(page);</span><br><span class="line">        <span class="comment">//物理地址转虚拟地址并初始化</span></span><br><span class="line">        <span class="built_in">memset</span>(KADDR(pa), <span class="number">0</span>, PGSIZE);</span><br><span class="line">        <span class="comment">//设置控制位</span></span><br><span class="line">        *pdep = pa | PTE_U | PTE_W | PTE_P;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//返回的是虚拟地址la对应的页表项入口地址</span></span><br><span class="line">    <span class="keyword">return</span> &amp;((<span class="type">pte_t</span> *)KADDR(PDE_ADDR(*pdep)))[PTX(la)];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>首先尝试使用PDX函数，获取一级页表的位置，如果获取成功，可以直接返回。</li><li>如果获取不成功，那么需要根据create标记位来决定是否创建这一个二级页表（注意，一级页表中，存储的都是二级页表的起始地址）。如果create为0，那么不创建，否则创建。</li><li>既然需要查找这个页表，那么页表的引用次数就要加一。</li><li>之后，需要使用memset将新建的这个页表虚拟地址，全部设置为0，因为这个页所代表的虚拟地址都没有被映射。</li><li>接下来是设置控制位。这里应该设置同时设置上PTE_U、PTE_W和PTE_P，分别代表用户态的软件可以读取对应地址的物理内存页内容、物理内存页内容可写、物理内存页存在。</li></ul><h2 id="练习3"><a href="#练习3" class="headerlink" title="练习3"></a>练习3</h2><blockquote><p>练习3：释放某虚地址所在的页并取消对应二级页表项的映射（需要编程）<br>当释放一个包含某虚地址的物理内存页时，需要让对应此物理内存页的管理数据结构Page做相关的清除处理，使得此物理内存页成为空闲；另外还需把表示虚地址与物理地址对应关系的二级页表项清除。请仔细查看和理解page_remove_pte函数中的注释。为此，需要补全在<br>kern&#x2F;mm&#x2F;pmm.c中的page_remove_pte函数。page_remove_pte函数的调用关系图如下所示：<br>图2 page_remove_pte函数的调用关系图<br>请在实验报告中简要说明你的设计实现过程。请回答如下问题：<br>数据结构Page的全局变量（其实是一个数组）的每一项与页表中的页目录项和页表项有无对应关系？如果有，其对应关系是啥？<br>如果希望虚拟地址与物理地址相等，则需要如何修改lab2，完成此事？ 鼓励通过编程来具体完成这个问题</p></blockquote><h3 id="1-1"><a href="#1-1" class="headerlink" title="1"></a>1</h3><p>page_remove_pte函数补全如下。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//page_remove_pte - free an Page sturct which is related linear address la</span></span><br><span class="line"><span class="comment">//                - and clean(invalidate) pte which is related linear address la</span></span><br><span class="line"><span class="comment">//note: PT is changed, so the TLB need to be invalidate </span></span><br><span class="line"><span class="type">static</span> <span class="keyword">inline</span> <span class="type">void</span></span><br><span class="line"><span class="title function_">page_remove_pte</span><span class="params">(<span class="type">pde_t</span> *pgdir, <span class="type">uintptr_t</span> la, <span class="type">pte_t</span> *ptep)</span> &#123;</span><br><span class="line">    <span class="comment">/* LAB2 EXERCISE 3: YOUR CODE</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * Please check if ptep is valid, and tlb must be manually updated if mapping is updated</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * Maybe you want help comment, BELOW comments can help you finish the code</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * Some Useful MACROs and DEFINEs, you can use them in below implementation.</span></span><br><span class="line"><span class="comment">     * MACROs or Functions:</span></span><br><span class="line"><span class="comment">     *   struct Page *page pte2page(*ptep): get the according page from the value of a ptep</span></span><br><span class="line"><span class="comment">     *   free_page : free a page</span></span><br><span class="line"><span class="comment">     *   page_ref_dec(page) : decrease page-&gt;ref. NOTICE: ff page-&gt;ref == 0 , then this page should be free.</span></span><br><span class="line"><span class="comment">     *   tlb_invalidate(pde_t *pgdir, uintptr_t la) : Invalidate a TLB entry, but only if the page tables being</span></span><br><span class="line"><span class="comment">     *                        edited are the ones currently in use by the processor.</span></span><br><span class="line"><span class="comment">     * DEFINEs:</span></span><br><span class="line"><span class="comment">     *   PTE_P           0x001                   // page table/directory entry flags bit : Present</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> 0</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="number">0</span>) &#123;                      <span class="comment">//(1) check if this page table entry is present</span></span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">Page</span> *<span class="title">page</span> =</span> <span class="literal">NULL</span>; <span class="comment">//(2) find corresponding page to pte</span></span><br><span class="line">                                  <span class="comment">//(3) decrease page reference</span></span><br><span class="line">                                  <span class="comment">//(4) and free this page when page reference reachs 0</span></span><br><span class="line">                                  <span class="comment">//(5) clear second page table entry</span></span><br><span class="line">                                  <span class="comment">//(6) flush tlb</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">    <span class="keyword">if</span> (*ptep &amp; PTE_P) &#123;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">Page</span> *<span class="title">page</span> =</span> pte2page(*ptep);</span><br><span class="line">        <span class="keyword">if</span> (page_ref_dec(page) == <span class="number">0</span>) &#123;</span><br><span class="line">            free_page(page);</span><br><span class="line">        &#125;</span><br><span class="line">        *ptep = <span class="number">0</span>;</span><br><span class="line">        tlb_invalidate(pgdir, la);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>先判断该页被引用的次数，如果只被引用了一次，那么直接释放掉这页， 否则就删掉二级页表的该表项，即该页的入口。我们先将物理页的引用数目减一，如果变为零，那么释放页面；然后将页目录项清零，刷新页表，即可取消页表映射。</p><h3 id="2-1"><a href="#2-1" class="headerlink" title="2"></a>2</h3><p>数据结构Page的全局变量的每一项与页表中的页目录项和页表项有关系。数据结构page是最低级的页表，目录项是一级页表，存储的内容是页表项的起始地址（二级页表），而页表项是二级页表，存储的是每个页表的开始地址，这些内容之间的关系时通过线性地址高低位不同功能的寻址体现的。</p><h3 id="3-1"><a href="#3-1" class="headerlink" title="3"></a>3</h3><p>物理地址和虚拟地址之间存在一定偏移offset，通常，这个offset，就是KERNBASE，是由操作系统决定的，而ucore中，定义在（kern&#x2F;mm&#x2F;memlayout.h）。KERNBASE为虚拟地址空间中的内核基址，即偏移量。如果想要让虚拟地址与物理地址相等，就需要修改偏移值为0。</p><p>修改位置如图所示。</p><p><img src="https://pics.kahvia.cn/img/image-20221113195348463.png" alt="image-20221113195348463"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;练习0&quot;&gt;&lt;a href=&quot;#练习0&quot; class=&quot;headerlink&quot; title=&quot;练习0&quot;&gt;&lt;/a&gt;练习0&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;练习0：填写已有实验&lt;br&gt;本实验依赖实验1。请把你做的实验1的代码填入本实验中代码中有“LAB1”的注释</summary>
      
    
    
    
    <category term="课程实验" scheme="https://blog.kahvia.cn/categories/%E8%AF%BE%E7%A8%8B%E5%AE%9E%E9%AA%8C/"/>
    
    
    <category term="OS" scheme="https://blog.kahvia.cn/tags/OS/"/>
    
  </entry>
  
  <entry>
    <title>OS-Lab1</title>
    <link href="https://blog.kahvia.cn/2022/11/13/OS-lab1.html"/>
    <id>https://blog.kahvia.cn/2022/11/13/OS-lab1.html</id>
    <published>2022-11-13T11:57:16.199Z</published>
    <updated>2023-01-05T12:45:17.247Z</updated>
    
    <content type="html"><![CDATA[<h2 id="练习1"><a href="#练习1" class="headerlink" title="练习1"></a>练习1</h2><blockquote><p>练习1：理解通过make生成执行文件的过程。（要求在报告中写出对下述问题的回答）<br>列出本实验各练习中对应的OS原理的知识点，并说明本实验中的实现部分如何对应和体现了原理中的基本概念和关键知识点。<br>在此练习中，大家需要通过静态分析代码来了解：</p><p>1.操作系统镜像文件ucore.img是如何一步一步生成的？(需要比较详细地解释Makefile中每一条相关命令和命令参数的含义，以及说明命令导致的结果)</p><p>2.一个被系统认为是符合规范的硬盘主引导扇区的特征是什么？ </p></blockquote><h3 id="1"><a href="#1" class="headerlink" title="1"></a>1</h3><h4 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h4><p>输入make “V&#x3D;” 得到详细的make过程如下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">[~/moocos/ucore_lab/labcodes/lab1]</span><br><span class="line">moocos-&gt; make <span class="string">&quot;V=&quot;</span></span><br><span class="line">+ cc kern/init/init.c</span><br><span class="line">gcc -Ikern/init/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c kern/init/init.c -o obj/kern/init/init.o</span><br><span class="line">kern/init/init.c:95:1: warning: ‘lab1_switch_test’ defined but not used [-Wunused-<span class="keyword">function</span>]</span><br><span class="line"> lab1_switch_test(void) &#123;</span><br><span class="line"> ^</span><br><span class="line">+ cc kern/libs/readline.c</span><br><span class="line">gcc -Ikern/libs/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c kern/libs/readline.c -o obj/kern/libs/readline.o</span><br><span class="line">+ cc kern/libs/stdio.c</span><br><span class="line">gcc -Ikern/libs/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c kern/libs/stdio.c -o obj/kern/libs/stdio.o</span><br><span class="line">+ cc kern/debug/kdebug.c</span><br><span class="line">gcc -Ikern/debug/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c kern/debug/kdebug.c -o obj/kern/debug/kdebug.o</span><br><span class="line">kern/debug/kdebug.c:251:1: warning: ‘read_eip’ defined but not used [-Wunused-<span class="keyword">function</span>]</span><br><span class="line"> read_eip(void) &#123;</span><br><span class="line"> ^</span><br><span class="line">+ cc kern/debug/kmonitor.c</span><br><span class="line">gcc -Ikern/debug/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c kern/debug/kmonitor.c -o obj/kern/debug/kmonitor.o</span><br><span class="line">+ cc kern/debug/panic.c</span><br><span class="line">gcc -Ikern/debug/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c kern/debug/panic.c -o obj/kern/debug/panic.o</span><br><span class="line">+ cc kern/driver/clock.c</span><br><span class="line">gcc -Ikern/driver/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c kern/driver/clock.c -o obj/kern/driver/clock.o</span><br><span class="line">+ cc kern/driver/console.c</span><br><span class="line">gcc -Ikern/driver/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c kern/driver/console.c -o obj/kern/driver/console.o</span><br><span class="line">+ cc kern/driver/intr.c</span><br><span class="line">gcc -Ikern/driver/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c kern/driver/intr.c -o obj/kern/driver/intr.o</span><br><span class="line">+ cc kern/driver/picirq.c</span><br><span class="line">gcc -Ikern/driver/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c kern/driver/picirq.c -o obj/kern/driver/picirq.o</span><br><span class="line">+ cc kern/trap/trap.c</span><br><span class="line">gcc -Ikern/trap/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c kern/trap/trap.c -o obj/kern/trap/trap.o</span><br><span class="line">kern/trap/trap.c:14:13: warning: ‘print_ticks’ defined but not used [-Wunused-<span class="keyword">function</span>]</span><br><span class="line"> static void <span class="function"><span class="title">print_ticks</span></span>() &#123;</span><br><span class="line">             ^</span><br><span class="line">kern/trap/trap.c:30:26: warning: ‘idt_pd’ defined but not used [-Wunused-variable]</span><br><span class="line"> static struct pseudodesc idt_pd = &#123;</span><br><span class="line">                          ^</span><br><span class="line">+ cc kern/trap/trapentry.S</span><br><span class="line">gcc -Ikern/trap/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c kern/trap/trapentry.S -o obj/kern/trap/trapentry.o</span><br><span class="line">+ cc kern/trap/vectors.S</span><br><span class="line">gcc -Ikern/trap/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c kern/trap/vectors.S -o obj/kern/trap/vectors.o</span><br><span class="line">+ cc kern/mm/pmm.c</span><br><span class="line">gcc -Ikern/mm/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c kern/mm/pmm.c -o obj/kern/mm/pmm.o</span><br><span class="line">+ cc libs/printfmt.c</span><br><span class="line">gcc -Ilibs/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/  -c libs/printfmt.c -o obj/libs/printfmt.o</span><br><span class="line">+ cc libs/string.c</span><br><span class="line">gcc -Ilibs/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/  -c libs/string.c -o obj/libs/string.o</span><br><span class="line">+ ld bin/kernel</span><br><span class="line">ld -m    elf_i386 -nostdlib -T tools/kernel.ld -o bin/kernel  obj/kern/init/init.o obj/kern/libs/readline.o obj/kern/libs/stdio.o obj/kern/debug/kdebug.o obj/kern/debug/kmonitor.o obj/kern/debug/panic.o obj/kern/driver/clock.o obj/kern/driver/console.o obj/kern/driver/intr.o obj/kern/driver/picirq.o obj/kern/trap/trap.o obj/kern/trap/trapentry.o obj/kern/trap/vectors.o obj/kern/mm/pmm.o  obj/libs/printfmt.o obj/libs/string.o</span><br><span class="line">+ cc boot/bootasm.S</span><br><span class="line">gcc -Iboot/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Os -nostdinc -c boot/bootasm.S -o obj/boot/bootasm.o</span><br><span class="line">+ cc boot/bootmain.c</span><br><span class="line">gcc -Iboot/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Os -nostdinc -c boot/bootmain.c -o obj/boot/bootmain.o</span><br><span class="line">+ cc tools/sign.c</span><br><span class="line">gcc -Itools/ -g -Wall -O2 -c tools/sign.c -o obj/sign/tools/sign.o</span><br><span class="line">gcc -g -Wall -O2 obj/sign/tools/sign.o -o bin/sign</span><br><span class="line">+ ld bin/bootblock</span><br><span class="line">ld -m    elf_i386 -nostdlib -N -e start -Ttext 0x7C00 obj/boot/bootasm.o obj/boot/bootmain.o -o obj/bootblock.o</span><br><span class="line"><span class="string">&#x27;obj/bootblock.out&#x27;</span> size: 472 bytes</span><br><span class="line">build 512 bytes boot sector: <span class="string">&#x27;bin/bootblock&#x27;</span> success!</span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/zero of=bin/ucore.img count=10000</span><br><span class="line">10000+0 records <span class="keyword">in</span></span><br><span class="line">10000+0 records out</span><br><span class="line">5120000 bytes (5.1 MB) copied, 0.0484045 s, 106 MB/s</span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=bin/bootblock of=bin/ucore.img conv=notrunc</span><br><span class="line">1+0 records <span class="keyword">in</span></span><br><span class="line">1+0 records out</span><br><span class="line">512 bytes (512 B) copied, 0.000105295 s, 4.9 MB/s</span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=bin/kernel of=bin/ucore.img seek=1 conv=notrunc</span><br><span class="line">138+1 records <span class="keyword">in</span></span><br><span class="line">138+1 records out</span><br><span class="line">70775 bytes (71 kB) copied, 0.00033329 s, 212 MB/s</span><br><span class="line">[~/moocos/ucore_lab/labcodes/lab1]</span><br><span class="line">moocos-&gt; </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>其中我们可以看到一些与gcc有关的命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -c xxxx.c -o xxxx.o</span><br></pre></td></tr></table></figure><p>这个命令的作用是将某个 c 文件经过 预处理(-E)、汇编(-S)、编译(-c) 后，将得到的结果输出到目标文件，即.o后缀的文件。</p><p>还有ld命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ld -o [target]  [<span class="built_in">source</span>]</span><br></pre></td></tr></table></figure><p>将 source 对应的源文件作连接处理，得到最终的文件。</p><p>make记录中对应的目标命令如下，将之前gcc编译出来的，一些以.o后缀的对象文件，作连接处理后，得到最终文件 kernel.ld，存放在tools目录下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ld -m    elf_i386 -nostdlib -T tools/kernel.ld -o bin/kernel  obj/kern/init/init.o obj/kern/libs/readline.o obj/kern/libs/stdio.o obj/kern/debug/kdebug.o obj/kern/debug/kmonitor.o obj/kern/debug/panic.o obj/kern/driver/clock.o obj/kern/driver/console.o obj/kern/driver/intr.o obj/kern/driver/picirq.o obj/kern/trap/trap.o obj/kern/trap/trapentry.o obj/kern/trap/vectors.o obj/kern/mm/pmm.o  obj/libs/printfmt.o obj/libs/string.o</span><br></pre></td></tr></table></figure><p>第二部分的编译和连接过程更短，可以看得更直观。编译得到bootasm.o和bootmain.o，再通过ld命令连接，得到obj目录下的bootblock.o文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">+ cc boot/bootasm.S</span><br><span class="line">gcc -Iboot/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Os -nostdinc -c boot/bootasm.S -o obj/boot/bootasm.o</span><br><span class="line">+ cc boot/bootmain.c</span><br><span class="line">gcc -Iboot/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Os -nostdinc -c boot/bootmain.c -o obj/boot/bootmain.o</span><br><span class="line">+ cc tools/sign.c</span><br><span class="line">gcc -Itools/ -g -Wall -O2 -c tools/sign.c -o obj/sign/tools/sign.o</span><br><span class="line">gcc -g -Wall -O2 obj/sign/tools/sign.o -o bin/sign</span><br><span class="line">+ ld bin/bootblock</span><br><span class="line">ld -m    elf_i386 -nostdlib -N -e start -Ttext 0x7C00 obj/boot/bootasm.o obj/boot/bootmain.o -o obj/bootblock.o</span><br><span class="line"><span class="string">&#x27;obj/bootblock.out&#x27;</span> size: 472 bytes</span><br></pre></td></tr></table></figure><p><img src="https://pics.kahvia.cn/img/image-20221112141937226.png" alt="bootblock.o"></p><p>最后则是 dd 命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=xxx of=yyy count=number</span><br></pre></td></tr></table></figure><p>类似于拷贝，if 指定输入文件， of 指定输出文件， count 指定拷贝的的块数。</p><p>make过程中对应的代码块如下。conv&#x3D;notrunc指的是“不截短输出文件”。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/zero of=bin/ucore.img count=10000</span><br><span class="line">10000+0 records <span class="keyword">in</span></span><br><span class="line">10000+0 records out</span><br><span class="line">5120000 bytes (5.1 MB) copied, 0.0484045 s, 106 MB/s</span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=bin/bootblock of=bin/ucore.img conv=notrunc</span><br><span class="line">1+0 records <span class="keyword">in</span></span><br><span class="line">1+0 records out</span><br><span class="line">512 bytes (512 B) copied, 0.000105295 s, 4.9 MB/s</span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=bin/kernel of=bin/ucore.img seek=1 conv=notrunc</span><br><span class="line">138+1 records <span class="keyword">in</span></span><br><span class="line">138+1 records out</span><br><span class="line">70775 bytes (71 kB) copied, 0.00033329 s, 212 MB/s</span><br></pre></td></tr></table></figure><p>具体拷贝的流程我结合指令详解也不是很明白。</p><h4 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h4><p>make生成 ucore.img 大概有三步，分别依赖指令 gcc, ld, dd。</p><p>gcc命令负责编译源文件，ld命令负责连接gcc得到的目标文件，dd命令负责拷贝目标文件到指定的位置。而dd 命令完成后得到的最终文件，就是 ucore.img </p><h3 id="2"><a href="#2" class="headerlink" title="2"></a>2</h3><p>引导扇区的大小为512字节。</p><h2 id="练习2"><a href="#练习2" class="headerlink" title="练习2"></a>练习2</h2><blockquote><p>练习2：使用qemu执行并调试lab1中的软件。（要求在报告中简要写出练习过程）<br>为了熟悉使用qemu和gdb进行的调试工作，我们进行如下的小练习：<br>1.从CPU加电后执行的第一条指令开始，单步跟踪BIOS的执行。<br>2.在初始化位置0x7c00设置实地址断点,测试断点正常。<br>3.从0x7c00开始跟踪代码运行,将单步跟踪反汇编得到的代码与bootasm.S和bootblock.asm进行比较。<br>4.自己找一个bootloader或内核中的代码位置，设置断点并进行测试。</p></blockquote><h3 id="1-1"><a href="#1-1" class="headerlink" title="1"></a>1</h3><p>在lab1目录下，执行 make -debug，进入调试界面，输入si进行单步跟踪，如下图所示</p><p><img src="https://pics.kahvia.cn/img/image-20221112153930312.png" alt="image-20221112153930312"></p><h3 id="2-1"><a href="#2-1" class="headerlink" title="2"></a>2</h3><p>设置实地址断点</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">set architecture i8086</span><br><span class="line">target remote :1234</span><br><span class="line">b *0x7c00</span><br><span class="line">c</span><br><span class="line">x/2i $pc</span><br></pre></td></tr></table></figure><p>再次使用make -debug,测试断点正常</p><p><img src="https://pics.kahvia.cn/img/image-20221112154421915.png" alt="image-20221112154421915"></p><h3 id="3"><a href="#3" class="headerlink" title="3"></a>3</h3><p>将makefile 的第218行起的代码，修改为如下代码</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">debug: <span class="variable">$(UCOREIMG)</span></span></span><br><span class="line"><span class="variable">$(V)</span><span class="variable">$(TERMINAL)</span> -e <span class="string">&quot;<span class="variable">$(QEMU)</span> -S -s -d in_asm -D <span class="variable">$(BINDIR)</span>/q.log -parallel stdio -hda <span class="variable">$&lt;</span> -serial null&quot;</span></span><br><span class="line"><span class="variable">$(V)</span>sleep 2</span><br><span class="line"><span class="variable">$(V)</span><span class="variable">$(TERMINAL)</span> -e <span class="string">&quot;gdb -q -tui -x tools/gdbinit&quot;</span></span><br></pre></td></tr></table></figure><p>make -debug 后产生 q.log 文件。通过查找断点地址得如下信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">IN: </span><br><span class="line">0x00007c00:  cli    </span><br><span class="line">0x00007c01:  cld    </span><br><span class="line">0x00007c02:  xor    %ax,%ax</span><br><span class="line">0x00007c04:  mov    %ax,%ds</span><br><span class="line">0x00007c06:  mov    %ax,%es</span><br><span class="line">0x00007c08:  mov    %ax,%ss</span><br></pre></td></tr></table></figure><p>而 bootasm.S 文件中，如此显示。</p><p><img src="https://pics.kahvia.cn/img/image-20221112155556494.png" alt="image-20221112155556494"></p><p>bootblock.asm 文件中如此显示。</p><p><img src="https://pics.kahvia.cn/img/image-20221112155733053.png" alt="image-20221112155733053"></p><p>通过比较得知，各文件中，指令差别不大。</p><h3 id="4"><a href="#4" class="headerlink" title="4"></a>4</h3><p>设置新断点为 0x7c16</p><p>make -debug 如图所示。</p><p><img src="https://pics.kahvia.cn/img/image-20221112160237581.png" alt="image-20221112160237581"></p><p>此时正在执行的指令为 test 和 jne</p><h2 id="练习3"><a href="#练习3" class="headerlink" title="练习3"></a>练习3</h2><blockquote><p>练习3：分析bootloader进入保护模式的过程。（要求在报告中写出分析）<br>BIOS将通过读取硬盘主引导扇区到内存，并转跳到对应内存中的位置执行bootloader。请分析bootloader是如何完成从实模式进入保护模式的。</p></blockquote><h3 id="1-开启A20门"><a href="#1-开启A20门" class="headerlink" title="1.开启A20门"></a>1.开启A20门</h3><p>在 bootasm.S 文件中，有这样的代码</p><p><img src="https://pics.kahvia.cn/img/image-20221112162346236.png" alt="image-20221112162346236"></p><p>其中seta20.1是往端口0x64写数据0xd1，告诉CPU我要往8042芯片的P2端口写数据；seta20.2是往端口0x60写数据0xdf，从而将8042芯片的P2端口设置为1. 两段代码都需要先读0x64端口的第2位，确保输入缓冲区为空后再进行后续写操作。</p><h3 id="2-初始化GDT表"><a href="#2-初始化GDT表" class="headerlink" title="2.初始化GDT表"></a>2.初始化GDT表</h3><p>同样在这个文件中。</p><p><img src="https://pics.kahvia.cn/img/image-20221112162738325.png" alt="image-20221112162738325"></p><h3 id="3-进入保护模式"><a href="#3-进入保护模式" class="headerlink" title="3.进入保护模式"></a>3.进入保护模式</h3><p>将cr0寄存器的PE位（cr0寄存器的最低位）设置为1。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">movl %cr0, %eax</span><br><span class="line">orl $CR0_PE_ON, %eax</span><br><span class="line">movl %eax, %cr0</span><br></pre></td></tr></table></figure><h2 id="练习4"><a href="#练习4" class="headerlink" title="练习4"></a>练习4</h2><blockquote><p>练习4：分析bootloader加载ELF格式的OS的过程。（要求在报告中写出分析）<br>通过阅读bootmain.c，了解bootloader如何加载ELF文件。通过分析源代码和通过qemu来运行并调试bootloader&amp;OS，<br>1.bootloader如何读取硬盘扇区的？<br>2.bootloader是如何加载ELF格式的OS？</p></blockquote><h3 id="1-2"><a href="#1-2" class="headerlink" title="1"></a>1</h3><p>在boot目录下的 bootmain.c 文件中，读取扇区的核心代码如下所示。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* readsect - read a single sector at @secno into @dst */</span></span><br><span class="line"><span class="type">static</span> <span class="type">void</span></span><br><span class="line"><span class="title function_">readsect</span><span class="params">(<span class="type">void</span> *dst, <span class="type">uint32_t</span> secno)</span> &#123;</span><br><span class="line">    <span class="comment">// wait for disk to be ready</span></span><br><span class="line">    waitdisk();</span><br><span class="line"></span><br><span class="line">    outb(<span class="number">0x1F2</span>, <span class="number">1</span>);                         <span class="comment">// count = 1</span></span><br><span class="line">    outb(<span class="number">0x1F3</span>, secno &amp; <span class="number">0xFF</span>);</span><br><span class="line">    outb(<span class="number">0x1F4</span>, (secno &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFF</span>);</span><br><span class="line">    outb(<span class="number">0x1F5</span>, (secno &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xFF</span>);</span><br><span class="line">    outb(<span class="number">0x1F6</span>, ((secno &gt;&gt; <span class="number">24</span>) &amp; <span class="number">0xF</span>) | <span class="number">0xE0</span>);</span><br><span class="line">    outb(<span class="number">0x1F7</span>, <span class="number">0x20</span>);                      <span class="comment">// cmd 0x20 - read sectors</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// wait for disk to be ready</span></span><br><span class="line">    waitdisk();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// read a sector</span></span><br><span class="line">    insl(<span class="number">0x1F0</span>, dst, SECTSIZE / <span class="number">4</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>等待磁盘就绪</li><li>发出指令</li><li>等待磁盘就绪</li><li>读取扇区</li></ul><h3 id="2-2"><a href="#2-2" class="headerlink" title="2"></a>2</h3><p>加载ELF格式的OS的核心代码如下所示</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* bootmain - the entry of bootloader */</span></span><br><span class="line"><span class="type">void</span></span><br><span class="line"><span class="title function_">bootmain</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="comment">// read the 1st page off disk</span></span><br><span class="line">    readseg((<span class="type">uintptr_t</span>)ELFHDR, SECTSIZE * <span class="number">8</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// is this a valid ELF?</span></span><br><span class="line">    <span class="keyword">if</span> (ELFHDR-&gt;e_magic != ELF_MAGIC) &#123;</span><br><span class="line">        <span class="keyword">goto</span> bad;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">proghdr</span> *<span class="title">ph</span>, *<span class="title">eph</span>;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// load each program segment (ignores ph flags)</span></span><br><span class="line">    ph = (<span class="keyword">struct</span> proghdr *)((<span class="type">uintptr_t</span>)ELFHDR + ELFHDR-&gt;e_phoff);</span><br><span class="line">    eph = ph + ELFHDR-&gt;e_phnum;</span><br><span class="line">    <span class="keyword">for</span> (; ph &lt; eph; ph ++) &#123;</span><br><span class="line">        readseg(ph-&gt;p_va &amp; <span class="number">0xFFFFFF</span>, ph-&gt;p_memsz, ph-&gt;p_offset);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// call the entry point from the ELF header</span></span><br><span class="line">    <span class="comment">// note: does not return</span></span><br><span class="line">    ((<span class="type">void</span> (*)(<span class="type">void</span>))(ELFHDR-&gt;e_entry &amp; <span class="number">0xFFFFFF</span>))();</span><br><span class="line"></span><br><span class="line">bad:</span><br><span class="line">    outw(<span class="number">0x8A00</span>, <span class="number">0x8A00</span>);</span><br><span class="line">    outw(<span class="number">0x8A00</span>, <span class="number">0x8E00</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* do nothing */</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>从磁盘读取第一页</li><li>判断是否是合法的ELF</li><li>加载每一个扇区</li><li>从ELF头部调用入口函数</li></ul><h2 id="练习5"><a href="#练习5" class="headerlink" title="练习5"></a>练习5</h2><blockquote><p>练习5：实现函数调用堆栈跟踪函数 （需要编程）<br>我们需要在lab1中完成kdebug.c中函数print_stackframe的实现，可以通过函数print_stackframe来跟踪函数调用堆栈中记录的返回地址。在如果能够正确实现此函数，可在lab1中执行 “make qemu”后，在qemu模拟器中得到类似如下的输出：<br>……<br>ebp:0x00007b28 eip:0x00100992 args:0x00010094 0x00010094 0x00007b58 0x00100096<br>kern&#x2F;debug&#x2F;kdebug.c:305: print_stackframe+22<br>ebp:0x00007b38 eip:0x00100c79 args:0x00000000 0x00000000 0x00000000 0x00007ba8<br>kern&#x2F;debug&#x2F;kmonitor.c:125: mon_backtrace+10<br>ebp:0x00007b58 eip:0x00100096 args:0x00000000 0x00007b80 0xffff0000 0x00007b84<br>kern&#x2F;init&#x2F;init.c:48: grade_backtrace2+33<br>ebp:0x00007b78 eip:0x001000bf args:0x00000000 0xffff0000 0x00007ba4 0x00000029<br>kern&#x2F;init&#x2F;init.c:53: grade_backtrace1+38<br>ebp:0x00007b98 eip:0x001000dd args:0x00000000 0x00100000 0xffff0000 0x0000001d<br>kern&#x2F;init&#x2F;init.c:58: grade_backtrace0+23<br>ebp:0x00007bb8 eip:0x00100102 args:0x0010353c 0x00103520 0x00001308 0x00000000<br>kern&#x2F;init&#x2F;init.c:63: grade_backtrace+34<br>ebp:0x00007be8 eip:0x00100059 args:0x00000000 0x00000000 0x00000000 0x00007c53<br>kern&#x2F;init&#x2F;init.c:28: kern_init+88<br>ebp:0x00007bf8 eip:0x00007d73 args:0xc031fcfa 0xc08ed88e 0x64e4d08e 0xfa7502a8<br><unknow>: – 0x00007d72 –<br>……<br>请完成实验，看看输出是否与上述显示大致一致，并解释最后一行各个数值的含义。</p></blockquote><p>实现函数如下所示。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">print_stackframe(<span class="type">void</span>) &#123;</span><br><span class="line">    <span class="type">uint32_t</span> *ebp = (<span class="type">uint32_t</span> *)read_ebp();</span><br><span class="line">    <span class="type">uint32_t</span> eip = read_eip();</span><br><span class="line">    <span class="keyword">while</span> (ebp)</span><br><span class="line">    &#123;</span><br><span class="line">        cprintf(<span class="string">&quot;ebp:0x%08x eip:0x%08x args:&quot;</span>, (<span class="type">uint32_t</span>)ebp, eip);</span><br><span class="line">        cprintf(<span class="string">&quot;0x%08x 0x%08x 0x%08x 0x%08x\n&quot;</span>, ebp[<span class="number">2</span>], ebp[<span class="number">3</span>], ebp[<span class="number">4</span>], ebp[<span class="number">5</span>]);</span><br><span class="line">        print_debuginfo(eip - <span class="number">1</span>);</span><br><span class="line">        eip = ebp[<span class="number">1</span>];</span><br><span class="line">        ebp = (<span class="type">uint32_t</span> *)*ebp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>执行make qemu，结果如下所示</p><p><img src="https://pics.kahvia.cn/img/image-20221112164802166.png" alt="image-20221112164802166"></p><ul><li>ebp：ebp的值是kern_init函数的栈顶地址。</li><li>eip：eip的值是kern_init函数的返回地址，也就是bootmain函数调用kern_init对应的指令的下一条指令的地址。</li><li>args：存放的是boot loader指令的前16个字节。</li></ul><h2 id="练习6"><a href="#练习6" class="headerlink" title="练习6"></a>练习6</h2><blockquote><p>练习6：完善中断初始化和处理 （需要编程）<br>请完成编码工作和回答如下问题：<br>1.中断描述符表（也可简称为保护模式下的中断向量表）中一个表项占多少字节？其中哪几位代表中断处理代码的入口？<br>2.请编程完善kern&#x2F;trap&#x2F;trap.c中对中断向量表进行初始化的函数idt_init。在idt_init函数中，依次对所有中断入口进行初始化。使用mmu.h中的SETGATE宏，填充idt数组内容。每个中断的入口由tools&#x2F;vectors.c生成，使用trap.c中声明的vectors数组即可。<br>3.请编程完善trap.c中的中断处理函数trap，在对时钟中断进行处理的部分填写trap函数中处理时钟中断的部分，使操作系统每遇到100次时钟中断后，调用print_ticks子程序，向屏幕上打印一行文字”100 ticks”。</p></blockquote><h4 id="1-3"><a href="#1-3" class="headerlink" title="1"></a>1</h4><p>中断描述符表一个表项占8个字节，其中2-3字节是段选择子，0-1字节和6-7字节拼成偏移量，即第16~ 32位是段选择子，第0~ 15、48~63位构成的偏移地址，通过段选择子去GDT中找到对应的基地址，然后基地址加上偏移量就是中断处理程序的地址。</p><h3 id="2-3"><a href="#2-3" class="headerlink" title="2"></a>2</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">idt_init</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">     <span class="comment">/* LAB1 YOUR CODE : STEP 2 */</span></span><br><span class="line">     <span class="comment">/* (1) Where are the entry addrs of each Interrupt Service Routine (ISR)?</span></span><br><span class="line"><span class="comment">      *     All ISR&#x27;s entry addrs are stored in __vectors. where is uintptr_t __vectors[] ?</span></span><br><span class="line"><span class="comment">      *     __vectors[] is in kern/trap/vector.S which is produced by tools/vector.c</span></span><br><span class="line"><span class="comment">      *     (try &quot;make&quot; command in lab1, then you will find vector.S in kern/trap DIR)</span></span><br><span class="line"><span class="comment">      *     You can use  &quot;extern uintptr_t __vectors[];&quot; to define this extern variable which will be used later.</span></span><br><span class="line"><span class="comment">      * (2) Now you should setup the entries of ISR in Interrupt Description Table (IDT).</span></span><br><span class="line"><span class="comment">      *     Can you see idt[256] in this file? Yes, it&#x27;s IDT! you can use SETGATE macro to setup each item of IDT</span></span><br><span class="line"><span class="comment">      * (3) After setup the contents of IDT, you will let CPU know where is the IDT by using &#x27;lidt&#x27; instruction.</span></span><br><span class="line"><span class="comment">      *     You don&#x27;t know the meaning of this instruction? just google it! and check the libs/x86.h to know more.</span></span><br><span class="line"><span class="comment">      *     Notice: the argument of lidt is idt_pd. try to find it!</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">    <span class="keyword">extern</span> <span class="type">uintptr_t</span> __vectors[];</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="keyword">sizeof</span>(idt) / <span class="keyword">sizeof</span>(<span class="keyword">struct</span> gatedesc); i ++) &#123;</span><br><span class="line">        SETGATE(idt[i], <span class="number">0</span>, GD_KTEXT, __vectors[i], DPL_KERNEL);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">// set for switch from user to kernel</span></span><br><span class="line">    SETGATE(idt[T_SWITCH_TOK], <span class="number">0</span>, GD_KTEXT, __vectors[T_SWITCH_TOK], DPL_USER);</span><br><span class="line"><span class="comment">// load the IDT</span></span><br><span class="line">    lidt(&amp;idt_pd);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-1"><a href="#3-1" class="headerlink" title="3"></a>3</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> IRQ_OFFSET + IRQ_TIMER:</span><br><span class="line">        <span class="comment">/* LAB1 YOUR CODE : STEP 3 */</span></span><br><span class="line">        <span class="comment">/* handle the timer interrupt */</span></span><br><span class="line">        <span class="comment">/* (1) After a timer interrupt, you should record this event using a global variable (increase it), such as ticks in kern/driver/clock.c</span></span><br><span class="line"><span class="comment">         * (2) Every TICK_NUM cycle, you can print some info using a funciton, such as print_ticks().</span></span><br><span class="line"><span class="comment">         * (3) Too Simple? Yes, I think so!</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        ticks ++;</span><br><span class="line">        <span class="keyword">if</span> (ticks % TICK_NUM == <span class="number">0</span>) &#123;</span><br><span class="line">            print_ticks();</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>运行结果如下所示。</p><p><img src="https://pics.kahvia.cn/img/image-20221112170446171.png" alt="image-20221112170446171"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;练习1&quot;&gt;&lt;a href=&quot;#练习1&quot; class=&quot;headerlink&quot; title=&quot;练习1&quot;&gt;&lt;/a&gt;练习1&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;练习1：理解通过make生成执行文件的过程。（要求在报告中写出对下述问题的回答）&lt;br&gt;列出本实验各练习中</summary>
      
    
    
    
    <category term="课程实验" scheme="https://blog.kahvia.cn/categories/%E8%AF%BE%E7%A8%8B%E5%AE%9E%E9%AA%8C/"/>
    
    
    <category term="OS" scheme="https://blog.kahvia.cn/tags/OS/"/>
    
  </entry>
  
  <entry>
    <title>Android-HttpRequest</title>
    <link href="https://blog.kahvia.cn/2022/10/31/AndroidHttpRequest.html"/>
    <id>https://blog.kahvia.cn/2022/10/31/AndroidHttpRequest.html</id>
    <published>2022-10-31T10:34:42.189Z</published>
    <updated>2023-03-14T06:50:58.301Z</updated>
    
    <content type="html"><![CDATA[<h3 id="POST"><a href="#POST" class="headerlink" title="POST"></a>POST</h3><p>据度娘解释，以前的安卓应用发出 http 请求后，如果请求时间过长，就会产生应用无响应的状态。所以改成了现在这种，直接发出 http 请求就会抛出错误。想要正确地发出http请求，就需要开一个子线程来进行这些操作。</p><p>下方的代码采用的是，直接通过 Thread 类创建子线程，需要传递的参数是一个实现了 Runnable 接口的类的实例对象。这里的对象通过匿名类生成。线程和匿名类的知识，可以在《Java2 实用教程》（俗称 课本）中找到。</p><p>线程的启动使用 start（）方法。启动后，就进入等待cpu使用权的队列。得到使用权就开始运行。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HttpUtil</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">requestPost</span><span class="params">()</span> <span class="keyword">throws</span> IOException, JSONException &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">Runnable</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">               <span class="keyword">try</span> &#123;</span><br><span class="line">                   <span class="comment">//创建URL对象</span></span><br><span class="line">                   URL url=<span class="keyword">new</span> <span class="title class_">URL</span>(<span class="string">&quot;http://www.xxx.com/user/check&quot;</span>);</span><br><span class="line">                   <span class="comment">//获取连接</span></span><br><span class="line">                   HttpURLConnection connection= (HttpURLConnection) url.openConnection();</span><br><span class="line">                   <span class="comment">//设定请求方式</span></span><br><span class="line">                   connection.setRequestMethod(<span class="string">&quot;POST&quot;</span>);</span><br><span class="line">                   <span class="comment">//设置内容类型，这里是json数据</span></span><br><span class="line">                   connection.setRequestProperty(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json;charset=UTF-8&quot;</span>);</span><br><span class="line">                   <span class="comment">//期望接收到的请求返回值</span></span><br><span class="line">                   connection.setRequestProperty(<span class="string">&quot;Accept&quot;</span>,<span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">                   <span class="comment">//允许通过连接向外输出，即发送数据到服务器</span></span><br><span class="line">                   connection.setDoOutput(<span class="literal">true</span>);</span><br><span class="line">                   <span class="comment">//允许通过连接向内输出，即安卓应用收到数据</span></span><br><span class="line">                   connection.setDoInput(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">                   <span class="comment">//创建实体对象</span></span><br><span class="line">                   User user=<span class="keyword">new</span> <span class="title class_">User</span>(<span class="string">&quot;914302063&quot;</span>,<span class="string">&quot;123456&quot;</span>);</span><br><span class="line">                   <span class="comment">//转换为JSONObject对象。user.toString()的toString方法是额外实现的。</span></span><br><span class="line">                   JSONObject jsonObject=<span class="keyword">new</span> <span class="title class_">JSONObject</span>(user.toString());</span><br><span class="line">                   <span class="comment">//转字符串，也就是这个字符串就是俗称的json字符串，是目标数据。</span></span><br><span class="line">                   String json=jsonObject.toString();</span><br><span class="line">                   Log.i(<span class="string">&quot;JsonData&quot;</span>,json);</span><br><span class="line"></span><br><span class="line">                   <span class="comment">//通过连接获取输出流</span></span><br><span class="line">                   OutputStream outputStream=connection.getOutputStream();</span><br><span class="line">                   <span class="comment">//把json字符串转换成字符数组，通过输出流输出</span></span><br><span class="line">                   outputStream.write(json.getBytes());</span><br><span class="line">                   <span class="comment">//outputStream输出流缓存区满了会自动调用flush（），输出流关闭前也会调用。所以这里写不写flush都可。</span></span><br><span class="line">                   outputStream.flush();</span><br><span class="line">                   outputStream.close();</span><br><span class="line">                   Log.i(<span class="string">&quot;responseCode&quot;</span>, String.valueOf(connection.getResponseCode()));</span><br><span class="line"></span><br><span class="line">                   <span class="comment">//通过连接获得输入流</span></span><br><span class="line">                   InputStream inputStream=connection.getInputStream();</span><br><span class="line">                   String result=<span class="string">&quot;&quot;</span>;</span><br><span class="line">                   StringBuilder stringBuilder=<span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">                   InputStreamReader inputStreamReader=<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(inputStream);</span><br><span class="line">                   BufferedReader bufferedReader=<span class="keyword">new</span> <span class="title class_">BufferedReader</span>(inputStreamReader);</span><br><span class="line">                   <span class="keyword">while</span>((result=bufferedReader.readLine())!=<span class="literal">null</span>)&#123;</span><br><span class="line">                       stringBuilder.append(result);</span><br><span class="line">                   &#125;</span><br><span class="line">                   Log.i(<span class="string">&quot;resultData&quot;</span>, String.valueOf(stringBuilder));</span><br><span class="line">               &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">                   System.out.println(e);</span><br><span class="line">               &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).start();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    String username;</span><br><span class="line">    String password;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">()</span>&#123;&#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">(String username, String password)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.username = username;</span><br><span class="line">        <span class="built_in">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUsername</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUsername</span><span class="params">(String username)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.username = username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPassword</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPassword</span><span class="params">(String password)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;<span class="comment">//这个方法在转换对象为JSONObject的时候会用到</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;username=&#x27;&quot;</span> + username + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, password=&#x27;&quot;</span> + password + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://pics.kahvia.cn/img/image-20221031190721290.png" alt="效果图"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;POST&quot;&gt;&lt;a href=&quot;#POST&quot; class=&quot;headerlink&quot; title=&quot;POST&quot;&gt;&lt;/a&gt;POST&lt;/h3&gt;&lt;p&gt;据度娘解释，以前的安卓应用发出 http 请求后，如果请求时间过长，就会产生应用无响应的状态。所以改成了现在这种，直接发出 </summary>
      
    
    
    
    <category term="知识" scheme="https://blog.kahvia.cn/categories/%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="Android" scheme="https://blog.kahvia.cn/tags/Android/"/>
    
  </entry>
  
</feed>
